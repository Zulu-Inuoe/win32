;;;win32 - CFFI bindings to Win32 API
;;;Written in 2013 by Wilfredo Velázquez-Rodríguez <zulu.inuoe@gmail.com>
;;;
;;;To the extent possible under law, the author(s) have dedicated all copyright
;;;and related and neighboring rights to this software to the public domain
;;;worldwide. This software is distributed without any warranty.
;;;You should have received a copy of the CC0 Public Domain Dedication along
;;;with this software. If not, see
;;;<http://creativecommons.org/publicdomain/zero/1.0/>.

(in-package #:win32)

(define-foreign-library kernel32
  (:win32 "Kernel32.dll"))

(define-foreign-library user32
  (:win32 "User32.dll"))

(define-foreign-library gdi32
  (:win32 "Gdi32.dll"))

(define-foreign-library opengl32
  (:win32 "Opengl32.dll"))

(define-foreign-library advapi32
  (:win32 "Advapi32.dll"))

(define-foreign-library setupapi
  (:win32 "setupapi.dll"))

(use-foreign-library user32)
(use-foreign-library kernel32)
(use-foreign-library gdi32)
(use-foreign-library opengl32)
(use-foreign-library advapi32)
(use-foreign-library setupapi)

(defconstant +win32-string-encoding+
  #+little-endian :utf-16le
  #+big-endian :utf-16be
  "Not a win32 'constant' per-se, but useful to expose for usage with FOREIGN-STRING-TO-LISP and friends.")

(defctype char :int8)
(defctype uchar :uchar)
(defctype wchar :int16)

(defctype int :int)
(defctype int-ptr #+x86 :int32 #+x86-64 :int64)
(defctype int8 :int8)
(defctype int16 :int16)
(defctype int32 :int32)
(defctype int64 :int64)

(defctype uint :uint32)
(defctype uint-ptr #+x86 :uint32 #+x86-64 :uint64)
(defctype uint8 :uint8)
(defctype uint16 :uint16)
(defctype uint32 :uint32)
(defctype uint64 :uint64)

(defctype long :long)
(defctype longlong :int64)
(defctype long-ptr #+x86 :int32 #+x86-64 :int64)
(defctype long32 :int32)
(defctype long64 :int64)

(defctype ulong :uint32)
(defctype ulonglong :uint64)
(defctype ulong-ptr #+x86 :uint32 #+x86-64 :uint64)
(defctype ulong32 :uint32)
(defctype ulong64 :uint64)

(defctype short :short)
(defctype ushort :ushort)

(defctype byte :uint8)
(defctype word :uint16)
(defctype dword :uint32)
(defctype dwordlong :uint64)
(defctype dword-ptr ulong-ptr)
(defctype dword32 :uint32)
(defctype dword64 :uint64)
(defctype qword :uint64)

(defctype bool :int)
(defctype boolean byte)

(defctype tbyte wchar)
(defctype tchar wchar)

(defctype float :float)

(defctype size-t #+x86 :uint32 #+x86-64 :uint64)
(defctype ssize-t #+x86 :int32 #+x86-64 :int64)

(defctype lpcstr (:string :encoding :ascii))
(defctype lpcwstr (:string :encoding #.+win32-string-encoding+))
(defctype lpstr (:string :encoding :ascii))
(defctype lpwstr (:string :encoding #.+win32-string-encoding+))
(defctype pcstr (:string :encoding :ascii))
(defctype pcwstr (:string :encoding #.+win32-string-encoding+))
(defctype pstr (:string :encoding :ascii))
(defctype pwstr (:string :encoding #.+win32-string-encoding+))

(defctype handle :pointer)

(defctype atom :uint16)
(defctype half-ptr #+x86 :int #+x86-64 :short)
(defctype uhalf-ptr #+x86 :uint #+x86-64 :ushort)
(defctype colorref :uint32)
(defctype haccel handle)
(defctype hbitmap handle)
(defctype hbrush handle)
(defctype hcolorspace handle)
(defctype hconv handle)
(defctype hconvlist handle)
(defctype hcursor handle)
(defctype hdc handle)
(defctype hddedata handle)
(defctype hdesk handle)
(defctype hdrop handle)
(defctype hdwp handle)
(defctype henhmetafile handle)
(defctype hfile :int)
(defctype hfont handle)
(defctype hgdiobj handle)
(defctype hglobal handle)
(defctype hhook handle)
(defctype hicon handle)
(defctype hinstance handle)
(defctype hkey handle)
(defctype hkl handle)
(defctype hlocal handle)
(defctype hmenu handle)
(defctype hmetafile handle)
(defctype hmodule hinstance)
(defctype hmonitor handle)
(defctype hpalette handle)
(defctype hpen handle)
(defctype hresult long)
(defctype hrgn handle)
(defctype hrsrc handle)
(defctype hsz handle)
(defctype hwinsta handle)
(defctype hwnd handle)
(defctype langid word)
(defctype lcid dword)
(defctype lgrpid dword)
(defctype lparam long-ptr)
(defctype lpctstr (:string :encoding #.+win32-string-encoding+))
(defctype lptstr (:string :encoding #.+win32-string-encoding+))
(defctype lresult long-ptr)
(defctype pctstr (:string :encoding #.+win32-string-encoding+))
(defctype ptstr (:string :encoding #.+win32-string-encoding+))
(defctype sc-handle handle)
(defctype sc-lock :pointer)
(defctype service-status-handle handle)
(defctype usn longlong)
(defctype wparam uint-ptr)

(defctype hdevinfo :pointer)

(eval-when (:compile-toplevel :load-toplevel :execute)
  (defun %to-int32 (value)
    "Makes it easier to declare certain high values which in C are int32, in hex.
  For example, the constant +cw-usedefault+ must be used in int32 contexts, but is declared
  to be 0x80000000, which when interpreted by lisp is a high positive number  and does not
  have the same binary memory representation as the C interpreted negative value."
    (cond
      ((> value #xFFFFFFFF)
       (error "The value ~A cannot be represented as an int32 as its value does not fit into 32-bits." value))
      ((> value #x7FFFFFFF)
       (1- (-  value #xFFFFFFFF)))
      ((>= value 0)
       value)
      (t
       (error "The value ~A cannot be converted at this time, as negatives are not supported." value)))))

;;CreateFile Creation Disposition
(defconstant +create-new+        1)
(defconstant +create-always+     2)
(defconstant +open-existing+     3)
(defconstant +open-always+       4)
(defconstant +truncate-existing+ 5)

;;Pixel types
(defconstant +pfd-type-rgba+        0)
(defconstant +pfd-type-colorindex+  1)

;;Layer types
(defconstant +pfd-main-plane+       0)
(defconstant +pfd-overlay-plane+    1)
(defconstant +pfd-underlay-plane+   -1)

;;Flags
(defconstant +pfd-doublebuffer+            #x00000001)
(defconstant +pfd-stereo+                  #x00000002)
(defconstant +pfd-draw-to-window+          #x00000004)
(defconstant +pfd-draw-to-bitmap+          #x00000008)
(defconstant +pfd-support-gdi+             #x00000010)
(defconstant +pfd-support-opengl+          #x00000020)
(defconstant +pfd-generic-format+          #x00000040)
(defconstant +pfd-need-palette+            #x00000080)
(defconstant +pfd-need-system-palette+     #x00000100)
(defconstant +pfd-swap-exchange+           #x00000200)
(defconstant +pfd-swap-copy+               #x00000400)
(defconstant +pfd-swap-layer-buffers+      #x00000800)
(defconstant +pfd-generic-accelerated+     #x00001000)
(defconstant +pfd-support-directdraw+      #x00002000)
(defconstant +pfd-direct3d-accelerated+    #x00004000)
(defconstant +pfd-support-composition+     #x00008000)
(defconstant +pfd-depth-dontcare+          #x20000000)
(defconstant +pfd-doublebuffer-dontcare+   #x40000000)
(defconstant +pfd-stereo-dontcare+         #x80000000)

;;Window styles
(defconstant +ws-overlapped+     #x00000000)
(defconstant +ws-popup+          #x80000000)
(defconstant +ws-child+          #x40000000)
(defconstant +ws-visible+        #x10000000)
(defconstant +ws-caption+        #x00C00000)
(defconstant +ws-border+         #x00800000)
(defconstant +ws-tabstop+        #x00010000)
(defconstant +ws-maximizebox+    #x00010000)
(defconstant +ws-minimizebox+    #x00020000)
(defconstant +ws-thickframe+     #x00040000)
(defconstant +ws-sysmenu+        #x00080000)

(defconstant +ws-overlappedwindow+ (logior +ws-overlapped+ +ws-caption+ +ws-sysmenu+ +ws-thickframe+ +ws-minimizebox+ +ws-maximizebox+))

;;Window ex styles
(defconstant +ws-ex-left+                 #x00000000)
(defconstant +ws-ex-ltrreading+           #x00000000)
(defconstant +ws-ex-rightscrollbar+       #x00000000)
(defconstant +ws-ex-dlgmodalframe+        #x00000001)
(defconstant +ws-ex-noparentnotify+       #x00000004)
(defconstant +ws-ex-topmost+              #x00000008)
(defconstant +ws-ex-acceptfiles+          #x00000010)
(defconstant +ws-ex-transparent+          #x00000020)
(defconstant +ws-ex-mdichild+             #x00000040)
(defconstant +ws-ex-toolwindow+           #x00000080)
(defconstant +ws-ex-windowedge+           #x00000100)
(defconstant +ws-ex-clientedge+           #x00000200)
(defconstant +ws-ex-contexthelp+          #x00000400)
(defconstant +ws-ex-right+                #x00001000)
(defconstant +ws-ex-rtlreading+           #x00002000)
(defconstant +ws-ex-leftscrollbar+        #x00004000)
(defconstant +ws-ex-controlparent+        #x00010000)
(defconstant +ws-ex-staticedge+           #x00020000)
(defconstant +ws-ex-appwindow+            #x00040000)
(defconstant +ws-ex-noinheritlayout+      #x00100000)
(defconstant +ws-ex-noredirectionbitmap+  #x00200000)
(defconstant +ws-ex-layoutrtl+            #x00400000)
(defconstant +ws-ex-composited+           #x02000000)
(defconstant +ws-ex-noactivate+           #x08000000)

(defconstant +ws-ex-overlapped-window+    (logior
                                           +ws-ex-windowedge+
                                           +ws-ex-clientedge+))
(defconstant +ws-ex-palettewindow+        (logior
                                           +ws-ex-windowedge+
                                           +ws-ex-toolwindow+
                                           +ws-ex-topmost+))

;;Edit control types
(defconstant +es-left+ #x0000)
(defconstant +es-center+ #x0001)
(defconstant +es-right+ #x0002)

(defconstant +wm-null+                     #x0000)
(defconstant +wm-create+                   #x0001)
(defconstant +wm-destroy+                  #x0002)
(defconstant +wm-move+                     #x0003)
(defconstant +wm-size+                     #x0005)
(defconstant +wm-activate+                 #x0006)
(defconstant +wm-setfocus+                 #x0007)
(defconstant +wm-killfocus+                #x0008)
(defconstant +wm-enable+                   #x000A)
(defconstant +wm-setredraw+                #x000B)
(defconstant +wm-settext+                  #x000C)
(defconstant +wm-gettext+                  #x000D)
(defconstant +wm-gettextlength+            #x000E)
(defconstant +wm-paint+                    #x000F)
(defconstant +wm-close+                    #x0010)
(defconstant +wm-queryendsession+          #x0011)
(defconstant +wm-quit+                     #x0012)
(defconstant +wm-queryopen+                #x0013)
(defconstant +wm-erasebkgnd+               #x0014)
(defconstant +wm-syscolorchange+           #x0015)
(defconstant +wm-endsession+               #x0016)
(defconstant +wm-systemerror+              #x0017)
(defconstant +wm-showwindow+               #x0018)
(defconstant +wm-ctlcolor+                 #x0019)
(defconstant +wm-wininichange+             #x001A)
(defconstant +wm-settingchange+            #x001A)
(defconstant +wm-devmodechange+            #x001B)
(defconstant +wm-activateapp+              #x001C)
(defconstant +wm-fontchange+               #x001D)
(defconstant +wm-timechange+               #x001E)
(defconstant +wm-cancelmode+               #x001F)
(defconstant +wm-setcursor+                #x0020)
(defconstant +wm-mouseactivate+            #x0021)
(defconstant +wm-childactivate+            #x0022)
(defconstant +wm-queuesync+                #x0023)
(defconstant +wm-getminmaxinfo+            #x0024)
(defconstant +wm-painticon+                #x0026)
(defconstant +wm-iconerasebkgnd+           #x0027)
(defconstant +wm-nextdlgctl+               #x0028)
(defconstant +wm-spoolerstatus+            #x002A)
(defconstant +wm-drawitem+                 #x002B)
(defconstant +wm-measureitem+              #x002C)
(defconstant +wm-deleteitem+               #x002D)
(defconstant +wm-vkeytoitem+               #x002E)
(defconstant +wm-chartoitem+               #x002F)
(defconstant +wm-setfont+                  #x0030)
(defconstant +wm-getfont+                  #x0031)
(defconstant +wm-sethotkey+                #x0032)
(defconstant +wm-gethotkey+                #x0033)
(defconstant +wm-querydragicon+            #x0037)
(defconstant +wm-compareitem+              #x0039)
(defconstant +wm-compacting+               #x0041)
(defconstant +wm-windowposchanging+        #x0046)
(defconstant +wm-windowposchanged+         #x0047)
(defconstant +wm-power+                    #x0048)
(defconstant +wm-copydata+                 #x004A)
(defconstant +wm-canceljournal+            #x004B)
(defconstant +wm-notify+                   #x004E)
(defconstant +wm-inputlangchangerequest+   #x0050)
(defconstant +wm-inputlangchange+          #x0051)
(defconstant +wm-tcard+                    #x0052)
(defconstant +wm-help+                     #x0053)
(defconstant +wm-userchanged+              #x0054)
(defconstant +wm-notifyformat+             #x0055)
(defconstant +wm-contextmenu+              #x007B)
(defconstant +wm-stylechanging+            #x007C)
(defconstant +wm-stylechanged+             #x007D)
(defconstant +wm-displaychange+            #x007E)
(defconstant +wm-geticon+                  #x007F)
(defconstant +wm-seticon+                  #x0080)
(defconstant +wm-nccreate+                 #x0081)
(defconstant +wm-ncdestroy+                #x0082)
(defconstant +wm-nccalcsize+               #x0083)
(defconstant +wm-nchittest+                #x0084)
(defconstant +wm-ncpaint+                  #x0085)
(defconstant +wm-ncactivate+               #x0086)
(defconstant +wm-getdlgcode+               #x0087)
(defconstant +wm-syncpaint+                #x0088)
(defconstant +wm-ncmousemove+              #x00A0)
(defconstant +wm-nclbuttondown+            #x00A1)
(defconstant +wm-nclbuttonup+              #x00A2)
(defconstant +wm-nclbuttondblclk+          #x00A3)
(defconstant +wm-ncrbuttondown+            #x00A4)
(defconstant +wm-ncrbuttonup+              #x00A5)
(defconstant +wm-ncrbuttondblclk+          #x00A6)
(defconstant +wm-ncmbuttondown+            #x00A7)
(defconstant +wm-ncmbuttonup+              #x00A8)
(defconstant +wm-ncmbuttondblclk+          #x00A9)
(defconstant +wm-keyfirst+                 #x0100)
(defconstant +wm-keydown+                  #x0100)
(defconstant +wm-keyup+                    #x0101)
(defconstant +wm-char+                     #x0102)
(defconstant +wm-deadchar+                 #x0103)
(defconstant +wm-syskeydown+               #x0104)
(defconstant +wm-syskeyup+                 #x0105)
(defconstant +wm-syschar+                  #x0106)
(defconstant +wm-sysdeadchar+              #x0107)
(defconstant +wm-keylast+                  #x0108)
(defconstant +wm-ime_startcomposition+     #x010D)
(defconstant +wm-ime_endcomposition+       #x010E)
(defconstant +wm-ime_composition+          #x010F)
(defconstant +wm-ime_keylast+              #x010F)
(defconstant +wm-initdialog+               #x0110)
(defconstant +wm-command+                  #x0111)
(defconstant +wm-syscommand+               #x0112)
(defconstant +wm-timer+                    #x0113)
(defconstant +wm-hscroll+                  #x0114)
(defconstant +wm-vscroll+                  #x0115)
(defconstant +wm-initmenu+                 #x0116)
(defconstant +wm-initmenupopup+            #x0117)
(defconstant +wm-menuselect+               #x011F)
(defconstant +wm-menuchar+                 #x0120)
(defconstant +wm-enteridle+                #x0121)
(defconstant +wm-ctlcolormsgbox+           #x0132)
(defconstant +wm-ctlcoloredit+             #x0133)
(defconstant +wm-ctlcolorlistbox+          #x0134)
(defconstant +wm-ctlcolorbtn+              #x0135)
(defconstant +wm-ctlcolordlg+              #x0136)
(defconstant +wm-ctlcolorscrollbar+        #x0137)
(defconstant +wm-ctlcolorstatic+           #x0138)
(defconstant +wm-mousefirst+               #x0200)
(defconstant +wm-mousemove+                #x0200)
(defconstant +wm-lbuttondown+              #x0201)
(defconstant +wm-lbuttonup+                #x0202)
(defconstant +wm-lbuttondblclk+            #x0203)
(defconstant +wm-rbuttondown+              #x0204)
(defconstant +wm-rbuttonup+                #x0205)
(defconstant +wm-rbuttondblclk+            #x0206)
(defconstant +wm-mbuttondown+              #x0207)
(defconstant +wm-mbuttonup+                #x0208)
(defconstant +wm-mbuttondblclk+            #x0209)
(defconstant +wm-mousewheel+               #x020A)
(defconstant +wm-mousehwheel+              #x020E)
(defconstant +wm-parentnotify+             #x0210)
(defconstant +wm-entermenuloop+            #x0211)
(defconstant +wm-exitmenuloop+             #x0212)
(defconstant +wm-nextmenu+                 #x0213)
(defconstant +wm-sizing+                   #x0214)
(defconstant +wm-capturechanged+           #x0215)
(defconstant +wm-moving+                   #x0216)
(defconstant +wm-powerbroadcast+           #x0218)
(defconstant +wm-devicechange+             #x0219)
(defconstant +wm-mdicreate+                #x0220)
(defconstant +wm-mdidestroy+               #x0221)
(defconstant +wm-mdiactivate+              #x0222)
(defconstant +wm-mdirestore+               #x0223)
(defconstant +wm-mdinext+                  #x0224)
(defconstant +wm-mdimaximize+              #x0225)
(defconstant +wm-mditile+                  #x0226)
(defconstant +wm-mdicascade+               #x0227)
(defconstant +wm-mdiiconarrange+           #x0228)
(defconstant +wm-mdigetactive+             #x0229)
(defconstant +wm-mdisetmenu+               #x0230)
(defconstant +wm-entersizemove+            #x0231)
(defconstant +wm-exitsizemove+             #x0232)
(defconstant +wm-dropfiles+                #x0233)
(defconstant +wm-mdirefreshmenu+           #x0234)
(defconstant +wm-ime-setcontext+           #x0281)
(defconstant +wm-ime-notify+               #x0282)
(defconstant +wm-ime-control+              #x0283)
(defconstant +wm-ime-compositionfull+      #x0284)
(defconstant +wm-ime-select+               #x0285)
(defconstant +wm-ime-char+                 #x0286)
(defconstant +wm-ime-keydown+              #x0290)
(defconstant +wm-ime-keyup+                #x0291)
(defconstant +wm-mousehover+               #x02A1)
(defconstant +wm-ncmouseleave+             #x02A2)
(defconstant +wm-mouseleave+               #x02A3)
(defconstant +wm-cut+                      #x0300)
(defconstant +wm-copy+                     #x0301)
(defconstant +wm-paste+                    #x0302)
(defconstant +wm-clear+                    #x0303)
(defconstant +wm-undo+                     #x0304)
(defconstant +wm-renderformat+             #x0305)
(defconstant +wm-renderallformats+         #x0306)
(defconstant +wm-destroyclipboard+         #x0307)
(defconstant +wm-drawclipboard+            #x0308)
(defconstant +wm-paintclipboard+           #x0309)
(defconstant +wm-vscrollclipboard+         #x030A)
(defconstant +wm-sizeclipboard+            #x030B)
(defconstant +wm-askcbformatname+          #x030C)
(defconstant +wm-changecbchain+            #x030D)
(defconstant +wm-hscrollclipboard+         #x030E)
(defconstant +wm-querynewpalette+          #x030F)
(defconstant +wm-paletteischanging+        #x0310)
(defconstant +wm-palettechanged+           #x0311)
(defconstant +wm-hotkey+                   #x0312)
(defconstant +wm-print+                    #x0317)
(defconstant +wm-printclient+              #x0318)
(defconstant +wm-handheldfirst+            #x0358)
(defconstant +wm-handheldlast+             #x035F)
(defconstant +wm-penwinfirst+              #x0380)
(defconstant +wm-penwinlast+               #x038F)
(defconstant +wm-coalesce_first+           #x0390)
(defconstant +wm-coalesce_last+            #x039F)
(defconstant +wm-dde-first+                #x03E0)
(defconstant +wm-dde-initiate+             #x03E0)
(defconstant +wm-dde-terminate+            #x03E1)
(defconstant +wm-dde-advise+               #x03E2)
(defconstant +wm-dde-unadvise+             #x03E3)
(defconstant +wm-dde-ack+                  #x03E4)
(defconstant +wm-dde-data+                 #x03E5)
(defconstant +wm-dde-request+              #x03E6)
(defconstant +wm-dde-poke+                 #x03E7)
(defconstant +wm-dde-execute+              #x03E8)
(defconstant +wm-dde-last+                 #x03E8)
(defconstant +wm-user+                     #x0400)
(defconstant +wm-app+                      #x8000)

(defconstant +time-cancel+    #x80000000)
(defconstant +time-hover+     #x00000001)
(defconstant +time-leave+     #x00000002)
(defconstant +time-nonclient+ #x80000010)
(defconstant +time-query+     #x40000000)

(defconstant +cw-usedefault+ (%to-int32 #x80000000))

(defconstant +cs-vredraw+ #x0001)
(defconstant +cs-hredraw+ #x0002)
(defconstant +cs-owndc+   #x0020)

(defconstant +sw-show+ 5)

(defvar +idi-application+ (make-pointer 32512))
(defvar +idc-arrow+ (make-pointer 32512))

(defconstant +white-brush+ 0)
(defconstant +black-brush+ 4)
(defconstant +dc-brush+ 18)

(defconstant +gcl-hbrbackground+ -10)
(defconstant +gcl-wndproc+ -24)

(defconstant +gcw-atom+ -32)

(defconstant +gwl-wndproc+  -4)
(defconstant +gwl-id+       -12)
(defconstant +gwl-style+    -16)
(defconstant +gwl-userdata+ -21)

(defconstant +swp-nosize+         #x0001)
(defconstant +swp-nomove+         #x0002)
(defconstant +swp-nozorder+       #x0004)
(defconstant +swp-noactivate+     #x0010)
(defconstant +swp-showwindow+     #x0040)
(defconstant +swp-hidewindow+     #x0080)
(defconstant +swp-noownerzorder+  #x0200)
(defconstant +swp-noreposition+   #x0200)

(defconstant +infinite+       #xFFFFFFFF)

(defconstant +wait-object-0+  #x00000000)
(defconstant +wait-abandoned+ #x00000080)
(defconstant +wait-timeout+   #x00000102)
(defconstant +wait-failed+    #xFFFFFFFF)

(defconstant +hwnd-top+       #x00000000)
(defconstant +hwnd-bottom+    #x00000001)
#+:x86
(progn
  (defconstant +hwnd-message+   #xFFFFFFFD)
  (defconstant +hwnd-notopmost+ #xFFFFFFFE)
  (defconstant +hwnd-topmost+   #xFFFFFFFF))

#+:x86-64
(progn
  (defconstant +hwnd-message+   #xFFFFFFFFFFFFFFFD)
  (defconstant +hwnd-notopmost+ #xFFFFFFFFFFFFFFFE)
  (defconstant +hwnd-topmost+   #xFFFFFFFFFFFFFFFF))

(defconstant +winevent-outofcontext+    #x0000)
(defconstant +winevent-skipownthread+   #x0001)
(defconstant +winevent-skipownprocess+  #x0002)
(defconstant +winevent-incontext+       #x0004)

(defconstant +wh-mouse+        7)
(defconstant +wh-mouse-ll+    14)

(defconstant +delete+         #x00010000)
(defconstant +read-control+   #x00020000)
(defconstant +write-dac+      #x00040000)
(defconstant +write-owner+    #x00080000)
(defconstant +synchronize+    #x00100000)

(defconstant +standard-rights-required+ #x00F0000)

(defconstant +standard-rights-read+     +read-control+)
(defconstant +standard-rights-write+    +read-control+)
(defconstant +standard-rights-execute+  +read-control+)

(defconstant +standard-rights-all+      #x001F0000)
(defconstant +specific-rights-all+      #x0000FFFF)

(defconstant +desktop-createmenu+      #x0004
  "Required to create a menu on the desktop.")
(defconstant +desktop-createwindow+    #x0002
  "Required to create a window on the desktop.")
(defconstant +desktop-enumerate+       #x0040
  "Required for the desktop to be enumerated.")
(defconstant +desktop-hookcontrol+     #x0008
  "Required to establish any of the window hooks.")
(defconstant +desktop-journalplayback+ #x0020
  "Required to perform journal playback on a desktop.")
(defconstant +desktop-journalrecord+   #x0010
  "Required to perform journal recording on a desktop.")
(defconstant +desktop-readobjects+     #x0001
  "Required to read objects on the desktop.")
(defconstant +desktop-switchdesktop+   #x0100
  "Required to activate the desktop using the SwitchDesktop function.")
(defconstant +desktop-writeobjects+    #x0080
  "Required to write objects on the desktop.")

(defconstant +generic-read+ (logior +desktop-enumerate+
                                    +desktop-readobjects+
                                    +standard-rights-read+))

(defconstant +generic-write+ (logior +desktop-createmenu+
                                     +desktop-createwindow+
                                     +desktop-hookcontrol+
                                     +desktop-journalplayback+
                                     +desktop-journalrecord+
                                     +desktop-writeobjects+
                                     +standard-rights-write+))

(defconstant +generic-execute+ (logior +desktop-switchdesktop+
                                       +standard-rights-execute+))

(defconstant +generic-all+ (logior +desktop-createmenu+
                                   +desktop-createwindow+
                                   +desktop-enumerate+
                                   +desktop-hookcontrol+
                                   +desktop-journalplayback+
                                   +desktop-journalrecord+
                                   +desktop-readobjects+
                                   +desktop-switchdesktop+
                                   +desktop-writeobjects+
                                   +standard-rights-required+))

(defconstant +file-share-delete+ #x00000004)
(defconstant +file-share-read+   #x00000001)
(defconstant +file-share-write+  #x00000002)

(defconstant +file-attribute-archive+ #x20)
(defconstant +file-attribute-compressed+ #x800)
(defconstant +file-attribute-device+ #x40)
(defconstant +file-attribute-directory+ #x10)
(defconstant +file-attribute-encrypted+ #x4000)
(defconstant +file-attribute-hidden+ #x2)
(defconstant +file-attribute-integrity-stream+ #x8000)
(defconstant +file-attribute-normal+ #x80)
(defconstant +file-attribute-not-content-indexed+ #x2000)
(defconstant +file-attribute-no-scrub-data+ #x20000)
(defconstant +file-attribute-offline+ #x1000)
(defconstant +file-attribute-readonly+ #x1)
(defconstant +file-attribute-recall-on-data-access+ #x400000)
(defconstant +file-attribute-recall-on-open+ #x40000)
(defconstant +file-attribute-reparse-point+ #x400)
(defconstant +file-attribute-sparse-file+ #x200)
(defconstant +file-attribute-system+ #x4)
(defconstant +file-attribute-temporary+ #x100)
(defconstant +file-attribute-virtual+ #x10000)

(defconstant +file-flag-backup-semantics+   #x02000000)
(defconstant +file-flag-delete-on-close+    #x04000000)
(defconstant +file-flag-no-buffering+       #x20000000)
(defconstant +file-flag-open-no-recall+     #x00100000)
(defconstant +file-flag-open-reparse-point+ #x00200000)
(defconstant +file-flag-overlapped+         #x40000000)
(defconstant +file-flag-posix-semantics+    #x00100000)
(defconstant +file-flag-random-access+      #x10000000)
(defconstant +file-flag-session-aware+      #x00800000)
(defconstant +file-flag-sequential-scan+    #x08000000)
(defconstant +file-flag-write-through+      #x80000000)

(defconstant +movefile-replace-existing+      #x01)
(defconstant +movefile-copy-allowed+          #x02)
(defconstant +movefile-delay-until-reboot+    #x04)
(defconstant +movefile-write-through+         #x08)
(defconstant +movefile-create-hardlink+       #x10)
(defconstant +movefile-fail-if-not-trackable+ #x20)

(defconstant +copy-file-fail-if-exists+              #x00000001)
(defconstant +copy-file-restartable+                 #x00000002)
(defconstant +copy-file-open-source-for-write+       #x00000004)
(defconstant +copy-file-allow-decrypted-destination+ #x00000008)
(defconstant +copy-file-copy-symlink+                #x00000800)
(defconstant +copy-file-no-buffering+                #x00001000)

(defconstant +hkey-classes-root+        #x80000000)
(defconstant +hkey-current-user+        #x80000001)
(defconstant +hkey-local-machine+       #x80000002)
(defconstant +hkey-users+               #x80000003)
(defconstant +hkey-performance-data+    #x80000004)
(defconstant +hkey-current-config+      #x80000005)
(defconstant +hkey-dyn-data+            #x80000006)
(defconstant +hkey-performance-text+    #x80000050)
(defconstant +hkey-performance-nlstext+ #x80000060)

(defconstant +reg-none+ 0)
(defconstant +reg-sz+ 1)
(defconstant +reg-expand-sz+ 2)
(defconstant +reg-binary+ 3)
(defconstant +reg-dword+ 4)
(defconstant +reg-dword-little-endian+ 4)
(defconstant +reg-dword-big-endian+ 5)
(defconstant +reg-link+ 6)
(defconstant +reg-multi-sz+ 7)
(defconstant +reg-resource-list+ 8)
(defconstant +reg-full-resource-descriptor+ 9)
(defconstant +reg-resource-requirements-list+ 10)
(defconstant +reg-qword+ 11)
(defconstant +reg-qword-little-endian+ 11)

(defconstant +rrf-rt-any+           #x0000ffff)
(defconstant +rrf-rt-dword+         #x00000018)
(defconstant +rrf-rt-qword+         #x00000048)
(defconstant +rrf-rt-reg-binary+    #x00000008)
(defconstant +rrf-rt-reg-dword+     #x00000010)
(defconstant +rrf-rt-reg-expand-sz+ #x00000004)
(defconstant +rrf-rt-reg-multi-sz+  #x00000020)
(defconstant +rrf-rt-reg-none+      #x00000001)
(defconstant +rrf-rt-reg-qword+     #x00000040)
(defconstant +rrf-rt-reg-sz+        #x00000002)

(defconstant +rrf-noexpand+          #x10000000)
(defconstant +rrf-zeroonfailure+     #x20000000)
(defconstant +rrf-subkey-wow6464key+ #x00010000)
(defconstant +rrf-subkey-wow6432key+ #x00020000)

(defconstant +reg-option-reserved+       #x00000000)
(defconstant +reg-option-backup-restore+ #x00000004)
(defconstant +reg-option-create-link+    #x00000002)
(defconstant +reg-option-non-volatile+   #x00000000)
(defconstant +reg-option-volatile+       #x00000001)
(defconstant +reg-option-open-link+      #x00000008)

(defconstant +reg-created-new-key+     #x00000001)
(defconstant +reg-opened-existing-key+ #x00000002)

(defconstant +key-all-access+         #xF003F)
(defconstant +key-create-link+        #x00020)
(defconstant +key-create-sub-key+     #x00004)
(defconstant +key-enumerate-sub-keys+ #x00008)
(defconstant +key-execute+            #x20019)
(defconstant +key-notify+             #x00010)
(defconstant +key-query-value+        #x00001)
(defconstant +key-read+               #x20019)
(defconstant +key-set-value+          #x00002)
(defconstant +key-wow64-32key+        #x00200)
(defconstant +key-wow64-64key+        #x00100)
(defconstant +key-write+              #x20006)

(defconstant +color-3ddkshadow+ 21)
(defconstant +color-3dface+ 15)
(defconstant +color-3dhighlight+ 20)
(defconstant +color-3dhilight+ 20)
(defconstant +color-3dlight+ 22)
(defconstant +color-3dshadow+ 16)
(defconstant +color-activeborder+ 10)
(defconstant +color-activecaption+ 2)
(defconstant +color-appworkspace+ 12)
(defconstant +color-background+ 1)
(defconstant +color-btnface+ 15)
(defconstant +color-btnhighlight+ 20)
(defconstant +color-btnhilight+ 20)
(defconstant +color-btnshadow+ 16)
(defconstant +color-btntext+ 18)
(defconstant +color-captiontext+ 9)
(defconstant +color-desktop+ 1)
(defconstant +color-gradientactivecaption+ 27)
(defconstant +color-gradientinactivecaption+ 28)
(defconstant +color-graytext+ 17)
(defconstant +color-highlight+ 13)
(defconstant +color-highlighttext+ 14)
(defconstant +color-hotlight+ 26)
(defconstant +color-inactiveborder+ 11)
(defconstant +color-inactivecaption+ 3)
(defconstant +color-inactivecaptiontext+ 19)
(defconstant +color-infobk+ 24)
(defconstant +color-infotext+ 23)
(defconstant +color-menu+ 4)
(defconstant +color-menuhilight+ 29)
(defconstant +color-menubar+ 30)
(defconstant +color-menutext+ 7)
(defconstant +color-scrollbar+ 0)
(defconstant +color-window+ 5)
(defconstant +color-windowframe+ 6)
(defconstant +color-windowtext+ 8)

(defconstant +smto-abortifhung+        #x0002)
(defconstant +smto-block+              #x0001)
(defconstant +smto-normal+             #x0000)
(defconstant +smto-notimeoutifnothung+ #x0008)
(defconstant +smto-erroronexit+        #x0020)

(defconstant +bsf-allowsfw+           #x00000080)
(defconstant +bsf-flushdisk+          #x00000004)
(defconstant +bsf-forceifhung+        #x00000020)
(defconstant +bsf-ignorecurrenttask+  #x00000002)
(defconstant +bsf-luid+               #x00000400)
(defconstant +bsf-nohang+             #x00000008)
(defconstant +bsf-notimeoutifnothung+ #x00000040)
(defconstant +bsf-postmessage+        #x00000010)
(defconstant +bsf-returnhdesk+        #x00000200)
(defconstant +bsf-query+              #x00000001)
(defconstant +bsf-sendnotifymessage+  #x00000100)

(defconstant +bsm-allcomponents+ #x00000000)
(defconstant +bsm-alldesktops+   #x00000010)
(defconstant +bsm-applications+  #x00000008)

(defconstant +ismex-callback+ #x00000004)
(defconstant +ismex-notify+   #x00000002)
(defconstant +ismex-replied+  #x00000008)
(defconstant +ismex-send+     #x00000001)

(defconstant +sm-arrange+ 56)
(defconstant +sm-cleanboot+ 67)
(defconstant +sm-cmonitors+ 80)
(defconstant +sm-cmousebuttons+ 43)
(defconstant +sm-convertibleslatemode+ #x2003)
(defconstant +sm-cxborder+ 5)
(defconstant +sm-cxcursor+ 13)
(defconstant +sm-cxdlgframe+ 7)
(defconstant +sm-cxdoubleclk+ 36)
(defconstant +sm-cxdrag+ 68)
(defconstant +sm-cxedge+ 45)
(defconstant +sm-cxfixedframe+ 7)
(defconstant +sm-cxfocusborder+ 83)
(defconstant +sm-cxframe+ 32)
(defconstant +sm-cxfullscreen+ 16)
(defconstant +sm-cxhscroll+ 21)
(defconstant +sm-cxhthumb+ 10)
(defconstant +sm-cxicon+ 11)
(defconstant +sm-cxiconspacing+ 38)
(defconstant +sm-cxmaximized+ 61)
(defconstant +sm-cxmaxtrack+ 59)
(defconstant +sm-cxmenucheck+ 71)
(defconstant +sm-cxmenusize+ 54)
(defconstant +sm-cxmin+ 28)
(defconstant +sm-cxminimized+ 57)
(defconstant +sm-cxminspacing+ 47)
(defconstant +sm-cxmintrack+ 34)
(defconstant +sm-cxpaddedborder+ 92)
(defconstant +sm-cxscreen+ 0)
(defconstant +sm-cxsize+ 30)
(defconstant +sm-cxsizeframe+ 32)
(defconstant +sm-cxsmicon+ 49)
(defconstant +sm-cxsmsize+ 52)
(defconstant +sm-cxvirtualscreen+ 78)
(defconstant +sm-cxvscroll+ 2)
(defconstant +sm-cyborder+ 6)
(defconstant +sm-cycaption+ 4)
(defconstant +sm-cycursor+ 14)
(defconstant +sm-cydlgframe+ 8)
(defconstant +sm-cydoubleclk+ 37)
(defconstant +sm-cydrag+ 69)
(defconstant +sm-cyedge+ 46)
(defconstant +sm-cyfixedframe+ 8)
(defconstant +sm-cyfocusborder+ 84)
(defconstant +sm-cyframe+ 33)
(defconstant +sm-cyfullscreen+ 17)
(defconstant +sm-cyhscroll+ 3)
(defconstant +sm-cyicon+ 12)
(defconstant +sm-cyiconspacing+ 39)
(defconstant +sm-cykanjiwindow+ 18)
(defconstant +sm-cymaximized+ 62)
(defconstant +sm-cymaxtrack+ 60)
(defconstant +sm-cymenu+ 15)
(defconstant +sm-cymenucheck+ 72)
(defconstant +sm-cymenusize+ 55)
(defconstant +sm-cymin+ 29)
(defconstant +sm-cyminimized+ 58)
(defconstant +sm-cyminspacing+ 48)
(defconstant +sm-cymintrack+ 35)
(defconstant +sm-cyscreen+ 1)
(defconstant +sm-cysize+ 31)
(defconstant +sm-cysizeframe+ 33)
(defconstant +sm-cysmcaption+ 51)
(defconstant +sm-cysmicon+ 50)
(defconstant +sm-cysmsize+ 53)
(defconstant +sm-cyvirtualscreen+ 79)
(defconstant +sm-cyvscroll+ 20)
(defconstant +sm-cyvthumb+ 9)
(defconstant +sm-dbcsenabled+ 42)
(defconstant +sm-debug+ 22)
(defconstant +sm-digitizer+ 94)
(defconstant +sm-immenabled+ 82)
(defconstant +sm-maximumtouches+ 95)
(defconstant +sm-mediacenter+ 87)
(defconstant +sm-menudropalignment+ 40)
(defconstant +sm-mideastenabled+ 74)
(defconstant +sm-mousepresent+ 19)
(defconstant +sm-mousehorizontalwheelpresent+ 91)
(defconstant +sm-mousewheelpresent+ 75)
(defconstant +sm-network+ 63)
(defconstant +sm-penwindows+ 41)
(defconstant +sm-remotecontrol+ #x2001)
(defconstant +sm-remotesession+ #x1000)
(defconstant +sm-samedisplayformat+ 81)
(defconstant +sm-secure+ 44)
(defconstant +sm-serverr2+ 89)
(defconstant +sm-showsounds+ 70)
(defconstant +sm-shuttingdown+ #x2000)
(defconstant +sm-slowmachine+ 73)
(defconstant +sm-starter+ 88)
(defconstant +sm-swapbutton+ 23)
(defconstant +sm-systemdocked+ #x2004)
(defconstant +sm-tabletpc+ 86)
(defconstant +sm-xvirtualscreen+ 76)
(defconstant +sm-yvirtualscreen+ 77)

;;;Accessibility parameters
(defconstant +spi-getaccesstimeout+ #x003C)
(defconstant +spi-getaudiodescription+ #x0074)
(defconstant +spi-getclientareaanimation+ #x1042)
(defconstant +spi-getdisableoverlappedcontent+ #x1040)
(defconstant +spi-getfilterkeys+ #x0032)
(defconstant +spi-getfocusborderheight+ #x2010)
(defconstant +spi-getfocusborderwidth+ #x200E)
(defconstant +spi-gethighcontrast+ #x0042)
(defconstant +spi-getlogicaldpioverride+ #x009E)
(defconstant +spi-getmessageduration+ #x2016)
(defconstant +spi-getmouseclicklock+ #x101E)
(defconstant +spi-getmouseclicklocktime+ #x2008)
(defconstant +spi-getmousekeys+ #x0036)
(defconstant +spi-getmousesonar+ #x101C)
(defconstant +spi-getmousevanish+ #x1020)
(defconstant +spi-getscreenreader+ #x0046)
(defconstant +spi-getserialkeys+ #x003E)
(defconstant +spi-getshowsounds+ #x0038)
(defconstant +spi-getsoundsentry+ #x0040)
(defconstant +spi-getstickykeys+ #x003A)
(defconstant +spi-gettogglekeys+ #x0034)
(defconstant +spi-setaccesstimeout+ #x003D)
(defconstant +spi-setaudiodescription+ #x0075)
(defconstant +spi-setclientareaanimation+ #x1043)
(defconstant +spi-setdisableoverlappedcontent+ #x1041)
(defconstant +spi-setfilterkeys+ #x0033)
(defconstant +spi-setfocusborderheight+ #x2011)
(defconstant +spi-setfocusborderwidth+ #x200F)
(defconstant +spi-sethighcontrast+ #x0043)
(defconstant +spi-setlogicaldpioverride+ #x009F)
(defconstant +spi-setmessageduration+ #x2017)
(defconstant +spi-setmouseclicklock+ #x101F)
(defconstant +spi-setmouseclicklocktime+ #x2009)
(defconstant +spi-setmousekeys+ #x0037)
(defconstant +spi-setmousesonar+ #x101D)
(defconstant +spi-setmousevanish+ #x1021)
(defconstant +spi-setscreenreader+ #x0047)
(defconstant +spi-setserialkeys+ #x003F)
(defconstant +spi-setshowsounds+ #x0039)
(defconstant +spi-setsoundsentry+ #x0041)
(defconstant +spi-setstickykeys+ #x003B)
(defconstant +spi-settogglekeys+ #x0035)

;;;Desktop parameters
(defconstant +spi-getcleartype+ #x1048)
(defconstant +spi-getdeskwallpaper+ #x0073)
(defconstant +spi-getdropshadow+ #x1024)
(defconstant +spi-getflatmenu+ #x1022)
(defconstant +spi-getfontsmoothing+ #x004A)
(defconstant +spi-getfontsmoothingcontrast+ #x200C)
(defconstant +spi-getfontsmoothingorientation+ #x2012)
(defconstant +spi-getfontsmoothingtype+ #x200A)
(defconstant +spi-getworkarea+ #x0030)
(defconstant +spi-setcleartype+ #x1049)
(defconstant +spi-setcursors+ #x0057)
(defconstant +spi-setdeskpattern+ #x0015)
(defconstant +spi-setdeskwallpaper+ #x0014)
(defconstant +spi-setdropshadow+ #x1025)
(defconstant +spi-setflatmenu+ #x1023)
(defconstant +spi-setfontsmoothing+ #x004B)
(defconstant +spi-setfontsmoothingcontrast+ #x200D)
(defconstant +spi-setfontsmoothingorientation+ #x2013)
(defconstant +spi-setfontsmoothingtype+ #x200B)
(defconstant +spi-setworkarea+ #x002F)

;;;Icon parameters
(defconstant +spi-geticonmetrics+ #x002D)
(defconstant +spi-geticontitlelogfont+ #x001F)
(defconstant +spi-geticontitlewrap+ #x0019)
(defconstant +spi-iconhorizontalspacing+ #x000D)
(defconstant +spi-iconverticalspacing+ #x0018)
(defconstant +spi-seticonmetrics+ #x002E)
(defconstant +spi-seticons+ #x0058)
(defconstant +spi-seticontitlelogfont+ #x0022)
(defconstant +spi-seticontitlewrap+ #x001A)

;;Input parameters
(defconstant +spi-getbeep+ #x0001)
(defconstant +spi-getblocksendinputresets+ #x1026)
(defconstant +spi-getcontactvisualization+ #x2018)
(defconstant +spi-getdefaultinputlang+ #x0059)
(defconstant +spi-getgesturevisualization+ #x201A)
(defconstant +spi-getkeyboardcues+ #x100A)
(defconstant +spi-getkeyboarddelay+ #x0016)
(defconstant +spi-getkeyboardpref+ #x0044)
(defconstant +spi-getkeyboardspeed+ #x000A)
(defconstant +spi-getmouse+ #x0003)
(defconstant +spi-getmousehoverheight+ #x0064)
(defconstant +spi-getmousehovertime+ #x0066)
(defconstant +spi-getmousehoverwidth+ #x0062)
(defconstant +spi-getmousespeed+ #x0070)
(defconstant +spi-getmousetrails+ #x005E)
(defconstant +spi-getmousewheelrouting+ #x201C)
(defconstant +spi-getpenvisualization+ #x201E)
(defconstant +spi-getsnaptodefbutton+ #x005F)
(defconstant +spi-getsystemlanguagebar+ #x1050)
(defconstant +spi-getthreadlocalinputsettings+ #x104E)
(defconstant +spi-getwheelscrollchars+ #x006C)
(defconstant +spi-getwheelscrolllines+ #x0068)
(defconstant +spi-setbeep+ #x0002)
(defconstant +spi-setblocksendinputresets+ #x1027)
(defconstant +spi-setcontactvisualization+ #x2019)
(defconstant +spi-setdefaultinputlang+ #x005A)
(defconstant +spi-setdoubleclicktime+ #x0020)
(defconstant +spi-setdoubleclkheight+ #x001E)
(defconstant +spi-setdoubleclkwidth+ #x001D)
(defconstant +spi-setgesturevisualization+ #x201B)
(defconstant +spi-setkeyboardcues+ #x100B)
(defconstant +spi-setkeyboarddelay+ #x0017)
(defconstant +spi-setkeyboardpref+ #x0045)
(defconstant +spi-setkeyboardspeed+ #x000B)
(defconstant +spi-setlangtoggle+ #x005B)
(defconstant +spi-setmouse+ #x0004)
(defconstant +spi-setmousebuttonswap+ #x0021)
(defconstant +spi-setmousehoverheight+ #x0065)
(defconstant +spi-setmousehovertime+ #x0067)
(defconstant +spi-setmousehoverwidth+ #x0063)
(defconstant +spi-setmousespeed+ #x0071)
(defconstant +spi-setmousetrails+ #x005D)
(defconstant +spi-setmousewheelrouting+ #x201D)
(defconstant +spi-setpenvisualization+ #x201F)
(defconstant +spi-setsnaptodefbutton+ #x0060)
(defconstant +spi-setsystemlanguagebar+ #x1051)
(defconstant +spi-setthreadlocalinputsettings+ #x104F)
(defconstant +spi-setwheelscrollchars+ #x006D)
(defconstant +spi-setwheelscrolllines+ #x0069)

;;;Menu parameters
(defconstant +spi-getmenudropalignment+ #x001B)
(defconstant +spi-getmenufade+ #x1012)
(defconstant +spi-getmenushowdelay+ #x006A)
(defconstant +spi-setmenudropalignment+ #x001C)
(defconstant +spi-setmenufade+ #x1013)
(defconstant +spi-setmenushowdelay+ #x006B)

;;;Power parameters
(defconstant +spi-getlowpoweractive+ #x0053)
(defconstant +spi-getlowpowertimeout+ #x004F)
(defconstant +spi-getpoweroffactive+ #x0054)
(defconstant +spi-getpowerofftimeout+ #x0050)
(defconstant +spi-setlowpoweractive+ #x0055)
(defconstant +spi-setlowpowertimeout+ #x0051)
(defconstant +spi-setpoweroffactive+ #x0056)
(defconstant +spi-setpowerofftimeout+ #x0052)

;;;Screen saver parameters
(defconstant +spi-getscreensaveactive+ #x0010)
(defconstant +spi-getscreensaverrunning+ #x0072)
(defconstant +spi-getscreensavesecure+ #x0076)
(defconstant +spi-getscreensavetimeout+ #x000E)
(defconstant +spi-setscreensaveactive+ #x0011)
(defconstant +spi-setscreensavesecure+ #x0077)
(defconstant +spi-setscreensavetimeout+ #x000F)

;;;Time-out parameters for applications/services
(defconstant +spi-gethungapptimeout+ #x0078)
(defconstant +spi-getwaittokilltimeout+ #x007A)
(defconstant +spi-getwaittokillservicetimeout+ #x007C)
(defconstant +spi-sethungapptimeout+ #x0079)
(defconstant +spi-setwaittokilltimeout+ #x007B)
(defconstant +spi-setwaittokillservicetimeout+ #x007D)

;;;UI effects parameters
(defconstant +spi-getcomboboxanimation+ #x1004)
(defconstant +spi-getcursorshadow+ #x101A)
(defconstant +spi-getgradientcaptions+ #x1008)
(defconstant +spi-gethottracking+ #x100E)
(defconstant +spi-getlistboxsmoothscrolling+ #x1006)
(defconstant +spi-getmenuanimation+ #x1002)
(defconstant +spi-getmenuunderlines+ #x100A)
(defconstant +spi-getselectionfade+ #x1014)
(defconstant +spi-gettooltipanimation+ #x1016)
(defconstant +spi-gettooltipfade+ #x1018)
(defconstant +spi-getuieffects+ #x103E)
(defconstant +spi-setcomboboxanimation+ #x1005)
(defconstant +spi-setcursorshadow+ #x101B)
(defconstant +spi-setgradientcaptions+ #x1009)
(defconstant +spi-sethottracking+ #x100F)
(defconstant +spi-setlistboxsmoothscrolling+ #x1007)
(defconstant +spi-setmenuanimation+ #x1003)
(defconstant +spi-setmenuunderlines+ #x100B)
(defconstant +spi-setselectionfade+ #x1015)
(defconstant +spi-settooltipanimation+ #x1017)
(defconstant +spi-settooltipfade+ #x1019)
(defconstant +spi-setuieffects+ #x103F)

;;;Window parameters
(defconstant +spi-getactivewindowtracking+ #x1000)
(defconstant +spi-getactivewndtrkzorder+ #x100C)
(defconstant +spi-getactivewndtrktimeout+ #x2002)
(defconstant +spi-getanimation+ #x0048)
(defconstant +spi-getborder+ #x0005)
(defconstant +spi-getcaretwidth+ #x2006)
(defconstant +spi-getdockmoving+ #x0090)
(defconstant +spi-getdragfrommaximize+ #x008C)
(defconstant +spi-getdragfullwindows+ #x0026)
(defconstant +spi-getforegroundflashcount+ #x2004)
(defconstant +spi-getforegroundlocktimeout+ #x2000)
(defconstant +spi-getminimizedmetrics+ #x002B)
(defconstant +spi-getmousedockthreshold+ #x007E)
(defconstant +spi-getmousedragoutthreshold+ #x0084)
(defconstant +spi-getmousesidemovethreshold+ #x0088)
(defconstant +spi-getnonclientmetrics+ #x0029)
(defconstant +spi-getpendockthreshold+ #x0080)
(defconstant +spi-getpendragoutthreshold+ #x0086)
(defconstant +spi-getpensidemovethreshold+ #x008A)
(defconstant +spi-getshowimeui+ #x006E)
(defconstant +spi-getsnapsizing+ #x008E)
(defconstant +spi-getwinarranging+ #x0082)
(defconstant +spi-setactivewindowtracking+ #x1001)
(defconstant +spi-setactivewndtrkzorder+ #x100D)
(defconstant +spi-setactivewndtrktimeout+ #x2003)
(defconstant +spi-setanimation+ #x0049)
(defconstant +spi-setborder+ #x0006)
(defconstant +spi-setcaretwidth+ #x2007)
(defconstant +spi-setdockmoving+ #x0091)
(defconstant +spi-setdragfrommaximize+ #x008D)
(defconstant +spi-setdragfullwindows+ #x0025)
(defconstant +spi-setdragheight+ #x004D)
(defconstant +spi-setdragwidth+ #x004C)
(defconstant +spi-setforegroundflashcount+ #x2005)
(defconstant +spi-setforegroundlocktimeout+ #x2001)
(defconstant +spi-setminimizedmetrics+ #x002C)
(defconstant +spi-setmousedockthreshold+ #x007F)
(defconstant +spi-setmousedragoutthreshold+ #x0085)
(defconstant +spi-setmousesidemovethreshold+ #x0089)
(defconstant +spi-setnonclientmetrics+ #x002A)
(defconstant +spi-setpendockthreshold+ #x0081)
(defconstant +spi-setpendragoutthreshold+ #x0087)
(defconstant +spi-setpensidemovethreshold+ #x008B)
(defconstant +spi-setshowimeui+ #x006F)
(defconstant +spi-setsnapsizing+ #x008F)
(defconstant +spi-setwinarranging+ #x0083)

(defconstant +spif-updateinifile+ #x01)
(defconstant +spif-sendchange+ #x02)
(defconstant +spif-sendwininichange+ #x02)

(defconstant +lf-facesize+ 32)

(defconstant +anysize-array+ 1)

(defconstant +digcf-default+         #x00000001)
(defconstant +digcf-present+         #x00000002)
(defconstant +digcf-allclasses+      #x00000004)
(defconstant +digcf-profile+         #x00000008)
(defconstant +digcf-deviceinterface+ #x00000010)
(defconstant +digcf-interfacedevice+ #x00000010)

(defconstant +error-success+ 0)
(defconstant +no-error+ 0)
(defconstant +error-invalid-function+ 1)
(defconstant +error-file-not-found+ 2)
(defconstant +error-path-not-found+ 3)
(defconstant +error-too-many-open-files+ 4)
(defconstant +error-access-denied+ 5)
(defconstant +error-invalid-handle+ 6)
(defconstant +error-arena-trashed+ 7)
(defconstant +error-not-enough-memory+ 8)
(defconstant +error-invalid-block+ 9)
(defconstant +error-bad-environment+ 10)
(defconstant +error-bad-format+ 11)
(defconstant +error-invalid-access+ 12)
(defconstant +error-invalid-data+ 13)
(defconstant +error-outofmemory+ 14)
(defconstant +error-invalid-drive+ 15)
(defconstant +error-current-directory+ 16)
(defconstant +error-not-same-device+ 17)
(defconstant +error-no-more-files+ 18)
(defconstant +error-write-protect+ 19)
(defconstant +error-bad-unit+ 20)
(defconstant +error-not-ready+ 21)
(defconstant +error-bad-command+ 22)
(defconstant +error-crc+ 23)
(defconstant +error-bad-length+ 24)
(defconstant +error-seek+ 25)
(defconstant +error-not-dos-disk+ 26)
(defconstant +error-sector-not-found+ 27)
(defconstant +error-out-of-paper+ 28)
(defconstant +error-write-fault+ 29)
(defconstant +error-read-fault+ 30)
(defconstant +error-gen-failure+ 31)
(defconstant +error-sharing-violation+ 32)
(defconstant +error-lock-violation+ 33)
(defconstant +error-wrong-disk+ 34)
(defconstant +error-sharing-buffer-exceeded+ 36)
(defconstant +error-handle-eof+ 38)
(defconstant +error-handle-disk-full+ 39)
(defconstant +error-not-supported+ 50)
(defconstant +error-rem-not-list+ 51)
(defconstant +error-dup-name+ 52)
(defconstant +error-bad-netpath+ 53)
(defconstant +error-network-busy+ 54)
(defconstant +error-dev-not-exist+ 55)
(defconstant +error-too-many-cmds+ 56)
(defconstant +error-adap-hdw-err+ 57)
(defconstant +error-bad-net-resp+ 58)
(defconstant +error-unexp-net-err+ 59)
(defconstant +error-bad-rem-adap+ 60)
(defconstant +error-printq-full+ 61)
(defconstant +error-no-spool-space+ 62)
(defconstant +error-print-cancelled+ 63)
(defconstant +error-netname-deleted+ 64)
(defconstant +error-network-access-denied+ 65)
(defconstant +error-bad-dev-type+ 66)
(defconstant +error-bad-net-name+ 67)
(defconstant +error-too-many-names+ 68)
(defconstant +error-too-many-sess+ 69)
(defconstant +error-sharing-paused+ 70)
(defconstant +error-req-not-accep+ 71)
(defconstant +error-redir-paused+ 72)
(defconstant +error-file-exists+ 80)
(defconstant +error-cannot-make+ 82)
(defconstant +error-fail-i24+ 83)
(defconstant +error-out-of-structures+ 84)
(defconstant +error-already-assigned+ 85)
(defconstant +error-invalid-password+ 86)
(defconstant +error-invalid-parameter+ 87)
(defconstant +error-net-write-fault+ 88)
(defconstant +error-no-proc-slots+ 89)
(defconstant +error-too-many-semaphores+ 100)
(defconstant +error-excl-sem-already-owned+ 101)
(defconstant +error-sem-is-set+ 102)
(defconstant +error-too-many-sem-requests+ 103)
(defconstant +error-invalid-at-interrupt-time+ 104)
(defconstant +error-sem-owner-died+ 105)
(defconstant +error-sem-user-limit+ 106)
(defconstant +error-disk-change+ 107)
(defconstant +error-drive-locked+ 108)
(defconstant +error-broken-pipe+ 109)
(defconstant +error-open-failed+ 110)
(defconstant +error-buffer-overflow+ 111)
(defconstant +error-disk-full+ 112)
(defconstant +error-no-more-search-handles+ 113)
(defconstant +error-invalid-target-handle+ 114)
(defconstant +error-invalid-category+ 117)
(defconstant +error-invalid-verify-switch+ 118)
(defconstant +error-bad-driver-level+ 119)
(defconstant +error-call-not-implemented+ 120)
(defconstant +error-sem-timeout+ 121)
(defconstant +error-insufficient-buffer+ 122)
(defconstant +error-invalid-name+ 123)
(defconstant +error-invalid-level+ 124)
(defconstant +error-no-volume-label+ 125)
(defconstant +error-mod-not-found+ 126)
(defconstant +error-proc-not-found+ 127)
(defconstant +error-wait-no-children+ 128)
(defconstant +error-child-not-complete+ 129)
(defconstant +error-direct-access-handle+ 130)
(defconstant +error-negative-seek+ 131)
(defconstant +error-seek-on-device+ 132)
(defconstant +error-is-join-target+ 133)
(defconstant +error-is-joined+ 134)
(defconstant +error-is-substed+ 135)
(defconstant +error-not-joined+ 136)
(defconstant +error-not-substed+ 137)
(defconstant +error-join-to-join+ 138)
(defconstant +error-subst-to-subst+ 139)
(defconstant +error-join-to-subst+ 140)
(defconstant +error-subst-to-join+ 141)
(defconstant +error-busy-drive+ 142)
(defconstant +error-same-drive+ 143)
(defconstant +error-dir-not-root+ 144)
(defconstant +error-dir-not-empty+ 145)
(defconstant +error-is-subst-path+ 146)
(defconstant +error-is-join-path+ 147)
(defconstant +error-path-busy+ 148)
(defconstant +error-is-subst-target+ 149)
(defconstant +error-system-trace+ 150)
(defconstant +error-invalid-event-count+ 151)
(defconstant +error-too-many-muxwaiters+ 152)
(defconstant +error-invalid-list-format+ 153)
(defconstant +error-label-too-long+ 154)
(defconstant +error-too-many-tcbs+ 155)
(defconstant +error-signal-refused+ 156)
(defconstant +error-discarded+ 157)
(defconstant +error-not-locked+ 158)
(defconstant +error-bad-threadid-addr+ 159)
(defconstant +error-bad-arguments+ 160)
(defconstant +error-bad-pathname+ 161)
(defconstant +error-signal-pending+ 162)
(defconstant +error-max-thrds-reached+ 164)
(defconstant +error-lock-failed+ 167)
(defconstant +error-busy+ 170)
(defconstant +error-cancel-violation+ 173)
(defconstant +error-atomic-locks-not-supported+ 174)
(defconstant +error-invalid-segment-number+ 180)
(defconstant +error-invalid-ordinal+ 182)
(defconstant +error-already-exists+ 183)
(defconstant +error-invalid-flag-number+ 186)
(defconstant +error-sem-not-found+ 187)
(defconstant +error-invalid-starting-codeseg+ 188)
(defconstant +error-invalid-stackseg+ 189)
(defconstant +error-invalid-moduletype+ 190)
(defconstant +error-invalid-exe-signature+ 191)
(defconstant +error-exe-marked-invalid+ 192)
(defconstant +error-bad-exe-format+ 193)
(defconstant +error-iterated-data-exceeds-64k+ 194)
(defconstant +error-invalid-minallocsize+ 195)
(defconstant +error-dynlink-from-invalid-ring+ 196)
(defconstant +error-iopl-not-enabled+ 197)
(defconstant +error-invalid-segdpl+ 198)
(defconstant +error-autodataseg-exceeds-64k+ 199)
(defconstant +error-ring2seg-must-be-movable+ 200)
(defconstant +error-reloc-chain-xeeds-seglim+ 201)
(defconstant +error-infloop-in-reloc-chain+ 202)
(defconstant +error-envvar-not-found+ 203)
(defconstant +error-no-signal-sent+ 205)
(defconstant +error-filename-exced-range+ 206)
(defconstant +error-ring2-stack-in-use+ 207)
(defconstant +error-meta-expansion-too-long+ 208)
(defconstant +error-invalid-signal-number+ 209)
(defconstant +error-thread-1-inactive+ 210)
(defconstant +error-locked+ 212)
(defconstant +error-too-many-modules+ 214)
(defconstant +error-nesting-not-allowed+ 215)
(defconstant +error-bad-pipe+ 230)
(defconstant +error-pipe-busy+ 231)
(defconstant +error-no-data+ 232)
(defconstant +error-pipe-not-connected+ 233)
(defconstant +error-more-data+ 234)
(defconstant +error-vc-disconnected+ 240)
(defconstant +error-invalid-ea-name+ 254)
(defconstant +error-ea-list-inconsistent+ 255)
(defconstant +error-no-more-items+ 259)
(defconstant +error-cannot-copy+ 266)
(defconstant +error-directory+ 267)
(defconstant +error-eas-didnt-fit+ 275)
(defconstant +error-ea-file-corrupt+ 276)
(defconstant +error-ea-table-full+ 277)
(defconstant +error-invalid-ea-handle+ 278)
(defconstant +error-eas-not-supported+ 282)
(defconstant +error-not-owner+ 288)
(defconstant +error-too-many-posts+ 298)
(defconstant +error-partial-copy+ 299)
(defconstant +error-mr-mid-not-found+ 317)
(defconstant +error-invalid-address+ 487)
(defconstant +error-arithmetic-overflow+ 534)
(defconstant +error-pipe-connected+ 535)
(defconstant +error-pipe-listening+ 536)
(defconstant +error-ea-access-denied+ 994)
(defconstant +error-operation-aborted+ 995)
(defconstant +error-io-incomplete+ 996)
(defconstant +error-io-pending+ 997)
(defconstant +error-noaccess+ 998)
(defconstant +error-swaperror+ 999)
(defconstant +error-stack-overflow+ 1001)
(defconstant +error-invalid-message+ 1002)
(defconstant +error-can-not-complete+ 1003)
(defconstant +error-invalid-flags+ 1004)
(defconstant +error-unrecognized-volume+ 1005)
(defconstant +error-file-invalid+ 1006)
(defconstant +error-fullscreen-mode+ 1007)
(defconstant +error-no-token+ 1008)
(defconstant +error-baddb+ 1009)
(defconstant +error-badkey+ 1010)
(defconstant +error-cantopen+ 1011)
(defconstant +error-cantread+ 1012)
(defconstant +error-cantwrite+ 1013)
(defconstant +error-registry-recovered+ 1014)
(defconstant +error-registry-corrupt+ 1015)
(defconstant +error-registry-io-failed+ 1016)
(defconstant +error-not-registry-file+ 1017)
(defconstant +error-key-deleted+ 1018)
(defconstant +error-no-log-space+ 1019)
(defconstant +error-key-has-children+ 1020)
(defconstant +error-child-must-be-volatile+ 1021)
(defconstant +error-notify-enum-dir+ 1022)
(defconstant +error-dependent-services-running+ 1051)
(defconstant +error-invalid-service-control+ 1052)
(defconstant +error-service-request-timeout+ 1053)
(defconstant +error-service-no-thread+ 1054)
(defconstant +error-service-database-locked+ 1055)
(defconstant +error-service-already-running+ 1056)
(defconstant +error-invalid-service-account+ 1057)
(defconstant +error-service-disabled+ 1058)
(defconstant +error-circular-dependency+ 1059)
(defconstant +error-service-does-not-exist+ 1060)
(defconstant +error-service-cannot-accept-ctrl+ 1061)
(defconstant +error-service-not-active+ 1062)
(defconstant +error-failed-service-controller-connect+ 1063)
(defconstant +error-exception-in-service+ 1064)
(defconstant +error-database-does-not-exist+ 1065)
(defconstant +error-service-specific-error+ 1066)
(defconstant +error-process-aborted+ 1067)
(defconstant +error-service-dependency-fail+ 1068)
(defconstant +error-service-logon-failed+ 1069)
(defconstant +error-service-start-hang+ 1070)
(defconstant +error-invalid-service-lock+ 1071)
(defconstant +error-service-marked-for-delete+ 1072)
(defconstant +error-service-exists+ 1073)
(defconstant +error-already-running-lkg+ 1074)
(defconstant +error-service-dependency-deleted+ 1075)
(defconstant +error-boot-already-accepted+ 1076)
(defconstant +error-service-never-started+ 1077)
(defconstant +error-duplicate-service-name+ 1078)
(defconstant +error-end-of-media+ 1100)
(defconstant +error-filemark-detected+ 1101)
(defconstant +error-beginning-of-media+ 1102)
(defconstant +error-setmark-detected+ 1103)
(defconstant +error-no-data-detected+ 1104)
(defconstant +error-partition-failure+ 1105)
(defconstant +error-invalid-block-length+ 1106)
(defconstant +error-device-not-partitioned+ 1107)
(defconstant +error-unable-to-lock-media+ 1108)
(defconstant +error-unable-to-unload-media+ 1109)
(defconstant +error-media-changed+ 1110)
(defconstant +error-bus-reset+ 1111)
(defconstant +error-no-media-in-drive+ 1112)
(defconstant +error-no-unicode-translation+ 1113)
(defconstant +error-dll-init-failed+ 1114)
(defconstant +error-shutdown-in-progress+ 1115)
(defconstant +error-no-shutdown-in-progress+ 1116)
(defconstant +error-io-device+ 1117)
(defconstant +error-serial-no-device+ 1118)
(defconstant +error-irq-busy+ 1119)
(defconstant +error-more-writes+ 1120)
(defconstant +error-counter-timeout+ 1121)
(defconstant +error-floppy-id-mark-not-found+ 1122)
(defconstant +error-floppy-wrong-cylinder+ 1123)
(defconstant +error-floppy-unknown-error+ 1124)
(defconstant +error-floppy-bad-registers+ 1125)
(defconstant +error-disk-recalibrate-failed+ 1126)
(defconstant +error-disk-operation-failed+ 1127)
(defconstant +error-disk-reset-failed+ 1128)
(defconstant +error-eom-overflow+ 1129)
(defconstant +error-not-enough-server-memory+ 1130)
(defconstant +error-possible-deadlock+ 1131)
(defconstant +error-mapped-alignment+ 1132)
(defconstant +error-set-power-state-vetoed+ 1140)
(defconstant +error-set-power-state-failed+ 1141)
(defconstant +error-too-many-links+ 1142)
(defconstant +error-old-win-version+ 1150)
(defconstant +error-app-wrong-os+ 1151)
(defconstant +error-single-instance-app+ 1152)
(defconstant +error-rmode-app+ 1153)
(defconstant +error-invalid-dll+ 1154)
(defconstant +error-no-association+ 1155)
(defconstant +error-dde-fail+ 1156)
(defconstant +error-dll-not-found+ 1157)
(defconstant +error-bad-username+ 2202)
(defconstant +error-not-connected+ 2250)
(defconstant +error-open-files+ 2401)
(defconstant +error-active-connections+ 2402)
(defconstant +error-device-in-use+ 2404)
(defconstant +error-bad-device+ 1200)
(defconstant +error-connection-unavail+ 1201)
(defconstant +error-device-already-remembered+ 1202)
(defconstant +error-no-net-or-bad-path+ 1203)
(defconstant +error-bad-provider+ 1204)
(defconstant +error-cannot-open-profile+ 1205)
(defconstant +error-bad-profile+ 1206)
(defconstant +error-not-container+ 1207)
(defconstant +error-extended-error+ 1208)
(defconstant +error-invalid-groupname+ 1209)
(defconstant +error-invalid-computername+ 1210)
(defconstant +error-invalid-eventname+ 1211)
(defconstant +error-invalid-domainname+ 1212)
(defconstant +error-invalid-servicename+ 1213)
(defconstant +error-invalid-netname+ 1214)
(defconstant +error-invalid-sharename+ 1215)
(defconstant +error-invalid-passwordname+ 1216)
(defconstant +error-invalid-messagename+ 1217)
(defconstant +error-invalid-messagedest+ 1218)
(defconstant +error-session-credential-conflict+ 1219)
(defconstant +error-remote-session-limit-exceeded+ 1220)
(defconstant +error-dup-domainname+ 1221)
(defconstant +error-no-network+ 1222)
(defconstant +error-cancelled+ 1223)
(defconstant +error-user-mapped-file+ 1224)
(defconstant +error-connection-refused+ 1225)
(defconstant +error-graceful-disconnect+ 1226)
(defconstant +error-address-already-associated+ 1227)
(defconstant +error-address-not-associated+ 1228)
(defconstant +error-connection-invalid+ 1229)
(defconstant +error-connection-active+ 1230)
(defconstant +error-network-unreachable+ 1231)
(defconstant +error-host-unreachable+ 1232)
(defconstant +error-protocol-unreachable+ 1233)
(defconstant +error-port-unreachable+ 1234)
(defconstant +error-request-aborted+ 1235)
(defconstant +error-connection-aborted+ 1236)
(defconstant +error-retry+ 1237)
(defconstant +error-connection-count-limit+ 1238)
(defconstant +error-login-time-restriction+ 1239)
(defconstant +error-login-wksta-restriction+ 1240)
(defconstant +error-incorrect-address+ 1241)
(defconstant +error-already-registered+ 1242)
(defconstant +error-service-not-found+ 1243)
(defconstant +error-not-authenticated+ 1244)
(defconstant +error-not-logged-on+ 1245)
(defconstant +error-continue+ 1246)
(defconstant +error-already-initialized+ 1247)
(defconstant +error-no-more-devices+ 1248)
(defconstant +error-not-all-assigned+ 1300)
(defconstant +error-some-not-mapped+ 1301)
(defconstant +error-no-quotas-for-account+ 1302)
(defconstant +error-local-user-session-key+ 1303)
(defconstant +error-null-lm-password+ 1304)
(defconstant +error-unknown-revision+ 1305)
(defconstant +error-revision-mismatch+ 1306)
(defconstant +error-invalid-owner+ 1307)
(defconstant +error-invalid-primary-group+ 1308)
(defconstant +error-no-impersonation-token+ 1309)
(defconstant +error-cant-disable-mandatory+ 1310)
(defconstant +error-no-logon-servers+ 1311)
(defconstant +error-no-such-logon-session+ 1312)
(defconstant +error-no-such-privilege+ 1313)
(defconstant +error-privilege-not-held+ 1314)
(defconstant +error-invalid-account-name+ 1315)
(defconstant +error-user-exists+ 1316)
(defconstant +error-no-such-user+ 1317)
(defconstant +error-group-exists+ 1318)
(defconstant +error-no-such-group+ 1319)
(defconstant +error-member-in-group+ 1320)
(defconstant +error-member-not-in-group+ 1321)
(defconstant +error-last-admin+ 1322)
(defconstant +error-wrong-password+ 1323)
(defconstant +error-ill-formed-password+ 1324)
(defconstant +error-password-restriction+ 1325)
(defconstant +error-logon-failure+ 1326)
(defconstant +error-account-restriction+ 1327)
(defconstant +error-invalid-logon-hours+ 1328)
(defconstant +error-invalid-workstation+ 1329)
(defconstant +error-password-expired+ 1330)
(defconstant +error-account-disabled+ 1331)
(defconstant +error-none-mapped+ 1332)
(defconstant +error-too-many-luids-requested+ 1333)
(defconstant +error-luids-exhausted+ 1334)
(defconstant +error-invalid-sub-authority+ 1335)
(defconstant +error-invalid-acl+ 1336)
(defconstant +error-invalid-sid+ 1337)
(defconstant +error-invalid-security-descr+ 1338)
(defconstant +error-bad-inheritance-acl+ 1340)
(defconstant +error-server-disabled+ 1341)
(defconstant +error-server-not-disabled+ 1342)
(defconstant +error-invalid-id-authority+ 1343)
(defconstant +error-allotted-space-exceeded+ 1344)
(defconstant +error-invalid-group-attributes+ 1345)
(defconstant +error-bad-impersonation-level+ 1346)
(defconstant +error-cant-open-anonymous+ 1347)
(defconstant +error-bad-validation-class+ 1348)
(defconstant +error-bad-token-type+ 1349)
(defconstant +error-no-security-on-object+ 1350)
(defconstant +error-cant-access-domain-info+ 1351)
(defconstant +error-invalid-server-state+ 1352)
(defconstant +error-invalid-domain-state+ 1353)
(defconstant +error-invalid-domain-role+ 1354)
(defconstant +error-no-such-domain+ 1355)
(defconstant +error-domain-exists+ 1356)
(defconstant +error-domain-limit-exceeded+ 1357)
(defconstant +error-internal-db-corruption+ 1358)
(defconstant +error-internal-error+ 1359)
(defconstant +error-generic-not-mapped+ 1360)
(defconstant +error-bad-descriptor-format+ 1361)
(defconstant +error-not-logon-process+ 1362)
(defconstant +error-logon-session-exists+ 1363)
(defconstant +error-no-such-package+ 1364)
(defconstant +error-bad-logon-session-state+ 1365)
(defconstant +error-logon-session-collision+ 1366)
(defconstant +error-invalid-logon-type+ 1367)
(defconstant +error-cannot-impersonate+ 1368)
(defconstant +error-rxact-invalid-state+ 1369)
(defconstant +error-rxact-commit-failure+ 1370)
(defconstant +error-special-account+ 1371)
(defconstant +error-special-group+ 1372)
(defconstant +error-special-user+ 1373)
(defconstant +error-members-primary-group+ 1374)
(defconstant +error-token-already-in-use+ 1375)
(defconstant +error-no-such-alias+ 1376)
(defconstant +error-member-not-in-alias+ 1377)
(defconstant +error-member-in-alias+ 1378)
(defconstant +error-alias-exists+ 1379)
(defconstant +error-logon-not-granted+ 1380)
(defconstant +error-too-many-secrets+ 1381)
(defconstant +error-secret-too-long+ 1382)
(defconstant +error-internal-db-error+ 1383)
(defconstant +error-too-many-context-ids+ 1384)
(defconstant +error-logon-type-not-granted+ 1385)
(defconstant +error-nt-cross-encryption-required+ 1386)
(defconstant +error-no-such-member+ 1387)
(defconstant +error-invalid-member+ 1388)
(defconstant +error-too-many-sids+ 1389)
(defconstant +error-lm-cross-encryption-required+ 1390)
(defconstant +error-no-inheritance+ 1391)
(defconstant +error-file-corrupt+ 1392)
(defconstant +error-disk-corrupt+ 1393)
(defconstant +error-no-user-session-key+ 1394)
(defconstant +error-license-quota-exceeded+ 1395)
(defconstant +error-invalid-window-handle+ 1400)
(defconstant +error-invalid-menu-handle+ 1401)
(defconstant +error-invalid-cursor-handle+ 1402)
(defconstant +error-invalid-accel-handle+ 1403)
(defconstant +error-invalid-hook-handle+ 1404)
(defconstant +error-invalid-dwp-handle+ 1405)
(defconstant +error-tlw-with-wschild+ 1406)
(defconstant +error-cannot-find-wnd-class+ 1407)
(defconstant +error-window-of-other-thread+ 1408)
(defconstant +error-hotkey-already-registered+ 1409)
(defconstant +error-class-already-exists+ 1410)
(defconstant +error-class-does-not-exist+ 1411)
(defconstant +error-class-has-windows+ 1412)
(defconstant +error-invalid-index+ 1413)
(defconstant +error-invalid-icon-handle+ 1414)
(defconstant +error-private-dialog-index+ 1415)
(defconstant +error-listbox-id-not-found+ 1416)
(defconstant +error-no-wildcard-characters+ 1417)
(defconstant +error-clipboard-not-open+ 1418)
(defconstant +error-hotkey-not-registered+ 1419)
(defconstant +error-window-not-dialog+ 1420)
(defconstant +error-control-id-not-found+ 1421)
(defconstant +error-invalid-combobox-message+ 1422)
(defconstant +error-window-not-combobox+ 1423)
(defconstant +error-invalid-edit-height+ 1424)
(defconstant +error-dc-not-found+ 1425)
(defconstant +error-invalid-hook-filter+ 1426)
(defconstant +error-invalid-filter-proc+ 1427)
(defconstant +error-hook-needs-hmod+ 1428)
(defconstant +error-global-only-hook+ 1429)
(defconstant +error-journal-hook-set+ 1430)
(defconstant +error-hook-not-installed+ 1431)
(defconstant +error-invalid-lb-message+ 1432)
(defconstant +error-setcount-on-bad-lb+ 1433)
(defconstant +error-lb-without-tabstops+ 1434)
(defconstant +error-destroy-object-of-other-thread+ 1435)
(defconstant +error-child-window-menu+ 1436)
(defconstant +error-no-system-menu+ 1437)
(defconstant +error-invalid-msgbox-style+ 1438)
(defconstant +error-invalid-spi-value+ 1439)
(defconstant +error-screen-already-locked+ 1440)
(defconstant +error-hwnds-have-diff-parent+ 1441)
(defconstant +error-not-child-window+ 1442)
(defconstant +error-invalid-gw-command+ 1443)
(defconstant +error-invalid-thread-id+ 1444)
(defconstant +error-non-mdichild-window+ 1445)
(defconstant +error-popup-already-active+ 1446)
(defconstant +error-no-scrollbars+ 1447)
(defconstant +error-invalid-scrollbar-range+ 1448)
(defconstant +error-invalid-showwin-command+ 1449)
(defconstant +error-no-system-resources+ 1450)
(defconstant +error-nonpaged-system-resources+ 1451)
(defconstant +error-paged-system-resources+ 1452)
(defconstant +error-working-set-quota+ 1453)
(defconstant +error-pagefile-quota+ 1454)
(defconstant +error-commitment-limit+ 1455)
(defconstant +error-menu-item-not-found+ 1456)
(defconstant +error-eventlog-file-corrupt+ 1500)
(defconstant +error-eventlog-cant-start+ 1501)
(defconstant +error-log-file-full+ 1502)
(defconstant +error-eventlog-file-changed+ 1503)
(defconstant +rpc-s-invalid-string-binding+ 1700)
(defconstant +rpc-s-wrong-kind-of-binding+ 1701)
(defconstant +rpc-s-invalid-binding+ 1702)
(defconstant +rpc-s-protseq-not-supported+ 1703)
(defconstant +rpc-s-invalid-rpc-protseq+ 1704)
(defconstant +rpc-s-invalid-string-uuid+ 1705)
(defconstant +rpc-s-invalid-endpoint-format+ 1706)
(defconstant +rpc-s-invalid-net-addr+ 1707)
(defconstant +rpc-s-no-endpoint-found+ 1708)
(defconstant +rpc-s-invalid-timeout+ 1709)
(defconstant +rpc-s-object-not-found+ 1710)
(defconstant +rpc-s-already-registered+ 1711)
(defconstant +rpc-s-type-already-registered+ 1712)
(defconstant +rpc-s-already-listening+ 1713)
(defconstant +rpc-s-no-protseqs-registered+ 1714)
(defconstant +rpc-s-not-listening+ 1715)
(defconstant +rpc-s-unknown-mgr-type+ 1716)
(defconstant +rpc-s-unknown-if+ 1717)
(defconstant +rpc-s-no-bindings+ 1718)
(defconstant +rpc-s-no-protseqs+ 1719)
(defconstant +rpc-s-cant-create-endpoint+ 1720)
(defconstant +rpc-s-out-of-resources+ 1721)
(defconstant +rpc-s-server-unavailable+ 1722)
(defconstant +rpc-s-server-too-busy+ 1723)
(defconstant +rpc-s-invalid-network-options+ 1724)
(defconstant +rpc-s-no-call-active+ 1725)
(defconstant +rpc-s-call-failed+ 1726)
(defconstant +rpc-s-call-failed-dne+ 1727)
(defconstant +rpc-s-protocol-error+ 1728)
(defconstant +rpc-s-unsupported-trans-syn+ 1730)
(defconstant +rpc-s-unsupported-type+ 1732)
(defconstant +rpc-s-invalid-tag+ 1733)
(defconstant +rpc-s-invalid-bound+ 1734)
(defconstant +rpc-s-no-entry-name+ 1735)
(defconstant +rpc-s-invalid-name-syntax+ 1736)
(defconstant +rpc-s-unsupported-name-syntax+ 1737)
(defconstant +rpc-s-uuid-no-address+ 1739)
(defconstant +rpc-s-duplicate-endpoint+ 1740)
(defconstant +rpc-s-unknown-authn-type+ 1741)
(defconstant +rpc-s-max-calls-too-small+ 1742)
(defconstant +rpc-s-string-too-long+ 1743)
(defconstant +rpc-s-protseq-not-found+ 1744)
(defconstant +rpc-s-procnum-out-of-range+ 1745)
(defconstant +rpc-s-binding-has-no-auth+ 1746)
(defconstant +rpc-s-unknown-authn-service+ 1747)
(defconstant +rpc-s-unknown-authn-level+ 1748)
(defconstant +rpc-s-invalid-auth-identity+ 1749)
(defconstant +rpc-s-unknown-authz-service+ 1750)
(defconstant +ept-s-invalid-entry+ 1751)
(defconstant +ept-s-cant-perform-op+ 1752)
(defconstant +ept-s-not-registered+ 1753)
(defconstant +rpc-s-nothing-to-export+ 1754)
(defconstant +rpc-s-incomplete-name+ 1755)
(defconstant +rpc-s-invalid-vers-option+ 1756)
(defconstant +rpc-s-no-more-members+ 1757)
(defconstant +rpc-s-not-all-objs-unexported+ 1758)
(defconstant +rpc-s-interface-not-found+ 1759)
(defconstant +rpc-s-entry-already-exists+ 1760)
(defconstant +rpc-s-entry-not-found+ 1761)
(defconstant +rpc-s-name-service-unavailable+ 1762)
(defconstant +rpc-s-invalid-naf-id+ 1763)
(defconstant +rpc-s-cannot-support+ 1764)
(defconstant +rpc-s-no-context-available+ 1765)
(defconstant +rpc-s-internal-error+ 1766)
(defconstant +rpc-s-zero-divide+ 1767)
(defconstant +rpc-s-address-error+ 1768)
(defconstant +rpc-s-fp-div-zero+ 1769)
(defconstant +rpc-s-fp-underflow+ 1770)
(defconstant +rpc-s-fp-overflow+ 1771)
(defconstant +rpc-x-no-more-entries+ 1772)
(defconstant +rpc-x-ss-char-trans-open-fail+ 1773)
(defconstant +rpc-x-ss-char-trans-short-file+ 1774)
(defconstant +rpc-x-ss-in-null-context+ 1775)
(defconstant +rpc-x-ss-context-damaged+ 1777)
(defconstant +rpc-x-ss-handles-mismatch+ 1778)
(defconstant +rpc-x-ss-cannot-get-call-handle+ 1779)
(defconstant +rpc-x-null-ref-pointer+ 1780)
(defconstant +rpc-x-enum-value-out-of-range+ 1781)
(defconstant +rpc-x-byte-count-too-small+ 1782)
(defconstant +rpc-x-bad-stub-data+ 1783)
(defconstant +error-invalid-user-buffer+ 1784)
(defconstant +error-unrecognized-media+ 1785)
(defconstant +error-no-trust-lsa-secret+ 1786)
(defconstant +error-no-trust-sam-account+ 1787)
(defconstant +error-trusted-domain-failure+ 1788)
(defconstant +error-trusted-relationship-failure+ 1789)
(defconstant +error-trust-failure+ 1790)
(defconstant +rpc-s-call-in-progress+ 1791)
(defconstant +error-netlogon-not-started+ 1792)
(defconstant +error-account-expired+ 1793)
(defconstant +error-redirector-has-open-handles+ 1794)
(defconstant +error-printer-driver-already-installed+ 1795)
(defconstant +error-unknown-port+ 1796)
(defconstant +error-unknown-printer-driver+ 1797)
(defconstant +error-unknown-printprocessor+ 1798)
(defconstant +error-invalid-separator-file+ 1799)
(defconstant +error-invalid-priority+ 1800)
(defconstant +error-invalid-printer-name+ 1801)
(defconstant +error-printer-already-exists+ 1802)
(defconstant +error-invalid-printer-command+ 1803)
(defconstant +error-invalid-datatype+ 1804)
(defconstant +error-invalid-environment+ 1805)
(defconstant +rpc-s-no-more-bindings+ 1806)
(defconstant +error-nologon-interdomain-trust-account+ 1807)
(defconstant +error-nologon-workstation-trust-account+ 1808)
(defconstant +error-nologon-server-trust-account+ 1809)
(defconstant +error-domain-trust-inconsistent+ 1810)
(defconstant +error-server-has-open-handles+ 1811)
(defconstant +error-resource-data-not-found+ 1812)
(defconstant +error-resource-type-not-found+ 1813)
(defconstant +error-resource-name-not-found+ 1814)
(defconstant +error-resource-lang-not-found+ 1815)
(defconstant +error-not-enough-quota+ 1816)
(defconstant +rpc-s-no-interfaces+ 1817)
(defconstant +rpc-s-call-cancelled+ 1818)
(defconstant +rpc-s-binding-incomplete+ 1819)
(defconstant +rpc-s-comm-failure+ 1820)
(defconstant +rpc-s-unsupported-authn-level+ 1821)
(defconstant +rpc-s-no-princ-name+ 1822)
(defconstant +rpc-s-not-rpc-error+ 1823)
(defconstant +rpc-s-uuid-local-only+ 1824)
(defconstant +rpc-s-sec-pkg-error+ 1825)
(defconstant +rpc-s-not-cancelled+ 1826)
(defconstant +rpc-x-invalid-es-action+ 1827)
(defconstant +rpc-x-wrong-es-version+ 1828)
(defconstant +rpc-x-wrong-stub-version+ 1829)
(defconstant +rpc-s-group-member-not-found+ 1898)
(defconstant +ept-s-cant-create+ 1899)
(defconstant +rpc-s-invalid-object+ 1900)
(defconstant +error-invalid-time+ 1901)
(defconstant +error-invalid-form-name+ 1902)
(defconstant +error-invalid-form-size+ 1903)
(defconstant +error-already-waiting+ 1904)
(defconstant +error-printer-deleted+ 1905)
(defconstant +error-invalid-printer-state+ 1906)
(defconstant +error-password-must-change+ 1907)
(defconstant +error-domain-controller-not-found+ 1908)
(defconstant +error-account-locked-out+ 1909)
(defconstant +error-no-browser-servers-found+ 6118)
(defconstant +error-invalid-pixel-format+ 2000)
(defconstant +error-bad-driver+ 2001)
(defconstant +error-invalid-window-style+ 2002)
(defconstant +error-metafile-not-supported+ 2003)
(defconstant +error-transform-not-supported+ 2004)
(defconstant +error-clipping-not-supported+ 2005)
(defconstant +error-unknown-print-monitor+ 3000)
(defconstant +error-printer-driver-in-use+ 3001)
(defconstant +error-spool-file-not-found+ 3002)
(defconstant +error-spl-no-startdoc+ 3003)
(defconstant +error-spl-no-addjob+ 3004)
(defconstant +error-print-processor-already-installed+ 3005)
(defconstant +error-print-monitor-already-installed+ 3006)
(defconstant +error-wins-internal+ 4000)
(defconstant +error-can-not-del-local-wins+ 4001)
(defconstant +error-static-init+ 4002)
(defconstant +error-inc-backup+ 4003)
(defconstant +error-full-backup+ 4004)
(defconstant +error-rec-non-existent+ 4005)
(defconstant +error-rpl-not-allowed+ 4006)
(defconstant +severity-success+ 0)
(defconstant +severity-error+ 1)
(defconstant +facility-windows+ 8)
(defconstant +facility-storage+ 3)
(defconstant +facility-rpc+ 1)
(defconstant +facility-win32+ 7)
(defconstant +facility-control+ 10)
(defconstant +facility-null+ 0)
(defconstant +facility-itf+ 4)
(defconstant +facility-dispatch+ 2)

(defconstant +s-ok+ #x00000000)
(defconstant +s-false+ #x00000001)
(defconstant +noerror+ +s-ok+)
(defconstant +e-unexpected+ #x8000ffff)
(defconstant +e-notimpl+ #x80004001)
(defconstant +e-outofmemory+ #x8007000e)
(defconstant +e-invalidarg+ #x80070057)
(defconstant +e-nointerface+ #x80004002)
(defconstant +e-pointer+ #x80004003)
(defconstant +e-handle+ #x80070006)
(defconstant +e-abort+ #x80004004)
(defconstant +e-fail+ #x80004005)
(defconstant +e-accessdenied+ #x80070005)
(defconstant +e-pending+ #x8000000a)
(defconstant +co-e-init-tls+ #x80004006)
(defconstant +co-e-init-shared-allocator+ #x80004007)
(defconstant +co-e-init-memory-allocator+ #x80004008)
(defconstant +co-e-init-class-cache+ #x80004009)
(defconstant +co-e-init-rpc-channel+ #x8000400a)
(defconstant +co-e-init-tls-set-channel-control+ #x8000400b)
(defconstant +co-e-init-tls-channel-control+ #x8000400c)
(defconstant +co-e-init-unaccepted-user-allocator+ #x8000400d)
(defconstant +co-e-init-scm-mutex-exists+ #x8000400e)
(defconstant +co-e-init-scm-file-mapping-exists+ #x8000400f)
(defconstant +co-e-init-scm-map-view-of-file+ #x80004010)
(defconstant +co-e-init-scm-exec-failure+ #x80004011)
(defconstant +co-e-init-only-single-threaded+ #x80004012)
(defconstant +ole-e-first+ #x80040000)
(defconstant +ole-e-last+ #x800400ff)
(defconstant +ole-s-first+ #x00040000)
(defconstant +ole-s-last+ #x000400ff)
(defconstant +ole-e-oleverb+ #x80040000)
(defconstant +ole-e-advf+ #x80040001)
(defconstant +ole-e-enum-nomore+ #x80040002)
(defconstant +ole-e-advisenotsupported+ #x80040003)
(defconstant +ole-e-noconnection+ #x80040004)
(defconstant +ole-e-notrunning+ #x80040005)
(defconstant +ole-e-nocache+ #x80040006)
(defconstant +ole-e-blank+ #x80040007)
(defconstant +ole-e-classdiff+ #x80040008)
(defconstant +ole-e-cant-getmoniker+ #x80040009)
(defconstant +ole-e-cant-bindtosource+ #x8004000a)
(defconstant +ole-e-static+ #x8004000b)
(defconstant +ole-e-promptsavecancelled+ #x8004000c)
(defconstant +ole-e-invalidrect+ #x8004000d)
(defconstant +ole-e-wrongcompobj+ #x8004000e)
(defconstant +ole-e-invalidhwnd+ #x8004000f)
(defconstant +ole-e-not-inplaceactive+ #x80040010)
(defconstant +ole-e-cantconvert+ #x80040011)
(defconstant +ole-e-nostorage+ #x80040012)
(defconstant +dv-e-formatetc+ #x80040064)
(defconstant +dv-e-dvtargetdevice+ #x80040065)
(defconstant +dv-e-stgmedium+ #x80040066)
(defconstant +dv-e-statdata+ #x80040067)
(defconstant +dv-e-lindex+ #x80040068)
(defconstant +dv-e-tymed+ #x80040069)
(defconstant +dv-e-clipformat+ #x8004006a)
(defconstant +dv-e-dvaspect+ #x8004006b)
(defconstant +dv-e-dvtargetdevice-size+ #x8004006c)
(defconstant +dv-e-noiviewobject+ #x8004006d)
(defconstant +dragdrop-e-first+ #x80040100)
(defconstant +dragdrop-e-last+ #x8004010f)
(defconstant +dragdrop-s-first+ #x00040100)
(defconstant +dragdrop-s-last+ #x0004010f)
(defconstant +dragdrop-e-notregistered+ #x80040100)
(defconstant +dragdrop-e-alreadyregistered+ #x80040101)
(defconstant +dragdrop-e-invalidhwnd+ #x80040102)
(defconstant +classfactory-e-first+ #x80040110)
(defconstant +classfactory-e-last+ #x8004011f)
(defconstant +classfactory-s-first+ #x00040110)
(defconstant +classfactory-s-last+ #x0004011f)
(defconstant +class-e-noaggregation+ #x80040110)
(defconstant +class-e-classnotavailable+ #x80040111)
(defconstant +marshal-e-first+ #x80040120)
(defconstant +marshal-e-last+ #x8004012f)
(defconstant +marshal-s-first+ #x00040120)
(defconstant +marshal-s-last+ #x0004012f)
(defconstant +data-e-first+ #x80040130)
(defconstant +data-e-last+ #x8004013f)
(defconstant +data-s-first+ #x00040130)
(defconstant +data-s-last+ #x0004013f)
(defconstant +view-e-first+ #x80040140)
(defconstant +view-e-last+ #x8004014f)
(defconstant +view-s-first+ #x00040140)
(defconstant +view-s-last+ #x0004014f)
(defconstant +view-e-draw+ #x80040140)
(defconstant +regdb-e-first+ #x80040150)
(defconstant +regdb-e-last+ #x8004015f)
(defconstant +regdb-s-first+ #x00040150)
(defconstant +regdb-s-last+ #x0004015f)
(defconstant +regdb-e-readregdb+ #x80040150)
(defconstant +regdb-e-writeregdb+ #x80040151)
(defconstant +regdb-e-keymissing+ #x80040152)
(defconstant +regdb-e-invalidvalue+ #x80040153)
(defconstant +regdb-e-classnotreg+ #x80040154)
(defconstant +regdb-e-iidnotreg+ #x80040155)
(defconstant +cache-e-first+ #x80040170)
(defconstant +cache-e-last+ #x8004017f)
(defconstant +cache-s-first+ #x00040170)
(defconstant +cache-s-last+ #x0004017f)
(defconstant +cache-e-nocache-updated+ #x80040170)
(defconstant +oleobj-e-first+ #x80040180)
(defconstant +oleobj-e-last+ #x8004018f)
(defconstant +oleobj-s-first+ #x00040180)
(defconstant +oleobj-s-last+ #x0004018f)
(defconstant +oleobj-e-noverbs+ #x80040180)
(defconstant +oleobj-e-invalidverb+ #x80040181)
(defconstant +clientsite-e-first+ #x80040190)
(defconstant +clientsite-e-last+ #x8004019f)
(defconstant +clientsite-s-first+ #x00040190)
(defconstant +clientsite-s-last+ #x0004019f)
(defconstant +inplace-e-notundoable+ #x800401a0)
(defconstant +inplace-e-notoolspace+ #x800401a1)
(defconstant +inplace-e-first+ #x800401a0)
(defconstant +inplace-e-last+ #x800401af)
(defconstant +inplace-s-first+ #x000401a0)
(defconstant +inplace-s-last+ #x000401af)
(defconstant +enum-e-first+ #x800401b0)
(defconstant +enum-e-last+ #x800401bf)
(defconstant +enum-s-first+ #x000401b0)
(defconstant +enum-s-last+ #x000401bf)
(defconstant +convert10-e-first+ #x800401c0)
(defconstant +convert10-e-last+ #x800401cf)
(defconstant +convert10-s-first+ #x000401c0)
(defconstant +convert10-s-last+ #x000401cf)
(defconstant +convert10-e-olestream-get+ #x800401c0)
(defconstant +convert10-e-olestream-put+ #x800401c1)
(defconstant +convert10-e-olestream-fmt+ #x800401c2)
(defconstant +convert10-e-olestream-bitmap-to-dib+ #x800401c3)
(defconstant +convert10-e-stg-fmt+ #x800401c4)
(defconstant +convert10-e-stg-no-std-stream+ #x800401c5)
(defconstant +convert10-e-stg-dib-to-bitmap+ #x800401c6)
(defconstant +clipbrd-e-first+ #x800401d0)
(defconstant +clipbrd-e-last+ #x800401df)
(defconstant +clipbrd-s-first+ #x000401d0)
(defconstant +clipbrd-s-last+ #x000401df)
(defconstant +clipbrd-e-cant-open+ #x800401d0)
(defconstant +clipbrd-e-cant-empty+ #x800401d1)
(defconstant +clipbrd-e-cant-set+ #x800401d2)
(defconstant +clipbrd-e-bad-data+ #x800401d3)
(defconstant +clipbrd-e-cant-close+ #x800401d4)
(defconstant +mk-e-first+ #x800401e0)
(defconstant +mk-e-last+ #x800401ef)
(defconstant +mk-s-first+ #x000401e0)
(defconstant +mk-s-last+ #x000401ef)
(defconstant +mk-e-connectmanually+ #x800401e0)
(defconstant +mk-e-exceededdeadline+ #x800401e1)
(defconstant +mk-e-needgeneric+ #x800401e2)
(defconstant +mk-e-unavailable+ #x800401e3)
(defconstant +mk-e-syntax+ #x800401e4)
(defconstant +mk-e-noobject+ #x800401e5)
(defconstant +mk-e-invalidextension+ #x800401e6)
(defconstant +mk-e-intermediateinterfacenotsupported+ #x800401e7)
(defconstant +mk-e-notbindable+ #x800401e8)
(defconstant +mk-e-notbound+ #x800401e9)
(defconstant +mk-e-cantopenfile+ #x800401ea)
(defconstant +mk-e-mustbotheruser+ #x800401eb)
(defconstant +mk-e-noinverse+ #x800401ec)
(defconstant +mk-e-nostorage+ #x800401ed)
(defconstant +mk-e-noprefix+ #x800401ee)
(defconstant +mk-e-enumeration-failed+ #x800401ef)
(defconstant +co-e-first+ #x800401f0)
(defconstant +co-e-last+ #x800401ff)
(defconstant +co-s-first+ #x000401f0)
(defconstant +co-s-last+ #x000401ff)
(defconstant +co-e-notinitialized+ #x800401f0)
(defconstant +co-e-alreadyinitialized+ #x800401f1)
(defconstant +co-e-cantdetermineclass+ #x800401f2)
(defconstant +co-e-classstring+ #x800401f3)
(defconstant +co-e-iidstring+ #x800401f4)
(defconstant +co-e-appnotfound+ #x800401f5)
(defconstant +co-e-appsingleuse+ #x800401f6)
(defconstant +co-e-errorinapp+ #x800401f7)
(defconstant +co-e-dllnotfound+ #x800401f8)
(defconstant +co-e-errorindll+ #x800401f9)
(defconstant +co-e-wrongosforapp+ #x800401fa)
(defconstant +co-e-objnotreg+ #x800401fb)
(defconstant +co-e-objisreg+ #x800401fc)
(defconstant +co-e-objnotconnected+ #x800401fd)
(defconstant +co-e-appdidntreg+ #x800401fe)
(defconstant +co-e-released+ #x800401ff)
(defconstant +ole-s-usereg+ #x00040000)
(defconstant +ole-s-static+ #x00040001)
(defconstant +ole-s-mac-clipformat+ #x00040002)
(defconstant +dragdrop-s-drop+ #x00040100)
(defconstant +dragdrop-s-cancel+ #x00040101)
(defconstant +dragdrop-s-usedefaultcursors+ #x00040102)
(defconstant +data-s-sameformatetc+ #x00040130)
(defconstant +view-s-already-frozen+ #x00040140)
(defconstant +cache-s-formatetc-notsupported+ #x00040170)
(defconstant +cache-s-samecache+ #x00040171)
(defconstant +cache-s-somecaches-notupdated+ #x00040172)
(defconstant +oleobj-s-invalidverb+ #x00040180)
(defconstant +oleobj-s-cannot-doverb-now+ #x00040181)
(defconstant +oleobj-s-invalidhwnd+ #x00040182)
(defconstant +inplace-s-truncated+ #x000401a0)
(defconstant +convert10-s-no-presentation+ #x000401c0)
(defconstant +mk-s-reduced-to-self+ #x000401e2)
(defconstant +mk-s-me+ #x000401e4)
(defconstant +mk-s-him+ #x000401e5)
(defconstant +mk-s-us+ #x000401e6)
(defconstant +mk-s-monikeralreadyregistered+ #x000401e7)
(defconstant +co-e-class-create-failed+ #x80080001)
(defconstant +co-e-scm-error+ #x80080002)
(defconstant +co-e-scm-rpc-failure+ #x80080003)
(defconstant +co-e-bad-path+ #x80080004)
(defconstant +co-e-server-exec-failure+ #x80080005)
(defconstant +co-e-objsrv-rpc-failure+ #x80080006)
(defconstant +mk-e-no-normalized+ #x80080007)
(defconstant +co-e-server-stopping+ #x80080008)
(defconstant +mem-e-invalid-root+ #x80080009)
(defconstant +mem-e-invalid-link+ #x80080010)
(defconstant +mem-e-invalid-size+ #x80080011)
(defconstant +disp-e-unknowninterface+ #x80020001)
(defconstant +disp-e-membernotfound+ #x80020003)
(defconstant +disp-e-paramnotfound+ #x80020004)
(defconstant +disp-e-typemismatch+ #x80020005)
(defconstant +disp-e-unknownname+ #x80020006)
(defconstant +disp-e-nonamedargs+ #x80020007)
(defconstant +disp-e-badvartype+ #x80020008)
(defconstant +disp-e-exception+ #x80020009)
(defconstant +disp-e-overflow+ #x8002000a)
(defconstant +disp-e-badindex+ #x8002000b)
(defconstant +disp-e-unknownlcid+ #x8002000c)
(defconstant +disp-e-arrayislocked+ #x8002000d)
(defconstant +disp-e-badparamcount+ #x8002000e)
(defconstant +disp-e-paramnotoptional+ #x8002000f)
(defconstant +disp-e-badcallee+ #x80020010)
(defconstant +disp-e-notacollection+ #x80020011)
(defconstant +type-e-buffertoosmall+ #x80028016)
(defconstant +type-e-invdataread+ #x80028018)
(defconstant +type-e-unsupformat+ #x80028019)
(defconstant +type-e-registryaccess+ #x8002801c)
(defconstant +type-e-libnotregistered+ #x8002801d)
(defconstant +type-e-undefinedtype+ #x80028027)
(defconstant +type-e-qualifiednamedisallowed+ #x80028028)
(defconstant +type-e-invalidstate+ #x80028029)
(defconstant +type-e-wrongtypekind+ #x8002802a)
(defconstant +type-e-elementnotfound+ #x8002802b)
(defconstant +type-e-ambiguousname+ #x8002802c)
(defconstant +type-e-nameconflict+ #x8002802d)
(defconstant +type-e-unknownlcid+ #x8002802e)
(defconstant +type-e-dllfunctionnotfound+ #x8002802f)
(defconstant +type-e-badmodulekind+ #x800288bd)
(defconstant +type-e-sizetoobig+ #x800288c5)
(defconstant +type-e-duplicateid+ #x800288c6)
(defconstant +type-e-invalidid+ #x800288cf)
(defconstant +type-e-typemismatch+ #x80028ca0)
(defconstant +type-e-outofbounds+ #x80028ca1)
(defconstant +type-e-ioerror+ #x80028ca2)
(defconstant +type-e-cantcreatetmpfile+ #x80028ca3)
(defconstant +type-e-cantloadlibrary+ #x80029c4a)
(defconstant +type-e-inconsistentpropfuncs+ #x80029c83)
(defconstant +type-e-circulartype+ #x80029c84)
(defconstant +stg-e-invalidfunction+ #x80030001)
(defconstant +stg-e-filenotfound+ #x80030002)
(defconstant +stg-e-pathnotfound+ #x80030003)
(defconstant +stg-e-toomanyopenfiles+ #x80030004)
(defconstant +stg-e-accessdenied+ #x80030005)
(defconstant +stg-e-invalidhandle+ #x80030006)
(defconstant +stg-e-insufficientmemory+ #x80030008)
(defconstant +stg-e-invalidpointer+ #x80030009)
(defconstant +stg-e-nomorefiles+ #x80030012)
(defconstant +stg-e-diskiswriteprotected+ #x80030013)
(defconstant +stg-e-seekerror+ #x80030019)
(defconstant +stg-e-writefault+ #x8003001d)
(defconstant +stg-e-readfault+ #x8003001e)
(defconstant +stg-e-shareviolation+ #x80030020)
(defconstant +stg-e-lockviolation+ #x80030021)
(defconstant +stg-e-filealreadyexists+ #x80030050)
(defconstant +stg-e-invalidparameter+ #x80030057)
(defconstant +stg-e-mediumfull+ #x80030070)
(defconstant +stg-e-abnormalapiexit+ #x800300fa)
(defconstant +stg-e-invalidheader+ #x800300fb)
(defconstant +stg-e-invalidname+ #x800300fc)
(defconstant +stg-e-unknown+ #x800300fd)
(defconstant +stg-e-unimplementedfunction+ #x800300fe)
(defconstant +stg-e-invalidflag+ #x800300ff)
(defconstant +stg-e-inuse+ #x80030100)
(defconstant +stg-e-notcurrent+ #x80030101)
(defconstant +stg-e-reverted+ #x80030102)
(defconstant +stg-e-cantsave+ #x80030103)
(defconstant +stg-e-oldformat+ #x80030104)
(defconstant +stg-e-olddll+ #x80030105)
(defconstant +stg-e-sharerequired+ #x80030106)
(defconstant +stg-e-notfilebasedstorage+ #x80030107)
(defconstant +stg-e-extantmarshallings+ #x80030108)
(defconstant +stg-s-converted+ #x00030200)
(defconstant +rpc-e-call-rejected+ #x80010001)
(defconstant +rpc-e-call-canceled+ #x80010002)
(defconstant +rpc-e-cantpost-insendcall+ #x80010003)
(defconstant +rpc-e-cantcallout-inasynccall+ #x80010004)
(defconstant +rpc-e-cantcallout-inexternalcall+ #x80010005)
(defconstant +rpc-e-connection-terminated+ #x80010006)
(defconstant +rpc-e-server-died+ #x80010007)
(defconstant +rpc-e-client-died+ #x80010008)
(defconstant +rpc-e-invalid-datapacket+ #x80010009)
(defconstant +rpc-e-canttransmit-call+ #x8001000a)
(defconstant +rpc-e-client-cantmarshal-data+ #x8001000b)
(defconstant +rpc-e-client-cantunmarshal-data+ #x8001000c)
(defconstant +rpc-e-server-cantmarshal-data+ #x8001000d)
(defconstant +rpc-e-server-cantunmarshal-data+ #x8001000e)
(defconstant +rpc-e-invalid-data+ #x8001000f)
(defconstant +rpc-e-invalid-parameter+ #x80010010)
(defconstant +rpc-e-cantcallout-again+ #x80010011)
(defconstant +rpc-e-server-died-dne+ #x80010012)
(defconstant +rpc-e-sys-call-failed+ #x80010100)
(defconstant +rpc-e-out-of-resources+ #x80010101)
(defconstant +rpc-e-attempted-multithread+ #x80010102)
(defconstant +rpc-e-not-registered+ #x80010103)
(defconstant +rpc-e-fault+ #x80010104)
(defconstant +rpc-e-serverfault+ #x80010105)
(defconstant +rpc-e-changed-mode+ #x80010106)
(defconstant +rpc-e-invalidmethod+ #x80010107)
(defconstant +rpc-e-disconnected+ #x80010108)
(defconstant +rpc-e-retry+ #x80010109)
(defconstant +rpc-e-servercall-retrylater+ #x8001010a)
(defconstant +rpc-e-servercall-rejected+ #x8001010b)
(defconstant +rpc-e-invalid-calldata+ #x8001010c)
(defconstant +rpc-e-cantcallout-ininputsynccall+ #x8001010d)
(defconstant +rpc-e-wrong-thread+ #x8001010e)
(defconstant +rpc-e-thread-not-init+ #x8001010f)
(defconstant +rpc-e-unexpected+ #x8001ffff)

(defconstant +nte-bad-uid+ #x80090001)
(defconstant +nte-bad-hash+ #x80090002)
(defconstant +nte-bad-key+ #x80090003)
(defconstant +nte-bad-len+ #x80090004)
(defconstant +nte-bad-data+ #x80090005)
(defconstant +nte-bad-signature+ #x80090006)
(defconstant +nte-bad-ver+ #x80090007)
(defconstant +nte-bad-algid+ #x80090008)
(defconstant +nte-bad-flags+ #x80090009)
(defconstant +nte-bad-type+ #x8009000a)
(defconstant +nte-bad-key-state+ #x8009000b)
(defconstant +nte-bad-hash-state+ #x8009000c)
(defconstant +nte-no-key+ #x8009000d)
(defconstant +nte-no-memory+ #x8009000e)
(defconstant +nte-exists+ #x8009000f)
(defconstant +nte-perm+ #x80090010)
(defconstant +nte-not-found+ #x80090011)
(defconstant +nte-double-encrypt+ #x80090012)
(defconstant +nte-bad-provider+ #x80090013)
(defconstant +nte-bad-prov-type+ #x80090014)
(defconstant +nte-bad-public-key+ #x80090015)
(defconstant +nte-bad-keyset+ #x80090016)
(defconstant +nte-prov-type-not-def+ #x80090017)
(defconstant +nte-prov-type-entry-bad+ #x80090018)
(defconstant +nte-keyset-not-def+ #x80090019)
(defconstant +nte-keyset-entry-bad+ #x8009001a)
(defconstant +nte-prov-type-no-match+ #x8009001b)
(defconstant +nte-signature-file-bad+ #x8009001c)
(defconstant +nte-provider-dll-fail+ #x8009001d)
(defconstant +nte-prov-dll-not-found+ #x8009001e)
(defconstant +nte-bad-keyset-param+ #x8009001f)
(defconstant +nte-fail+ #x80090020)
(defconstant +nte-sys-err+ #x80090021)

(defcstruct unicode-string
  (length ushort)
  (maximum-length ushort)
  (buffer pwstr))

(defcstruct luid
  (low-part dword)
  (high-part long))

(defcstruct bsminfo
  (size uint)
  (hdesk hdesk)
  (hwnd hwnd)
  (luid (:struct luid)))

(defcstruct rect
  (left :int32)
  (top :int32)
  (right :int32)
  (bottom :int32))

(defcstruct paletteentry
  (red :uint8)
  (green :uint8)
  (blue :uint8)
  (flags :uint8))

(defcstruct paintstruct
  (dc :pointer)
  (erase :boolean)
  (paint (:struct rect))
  (restore :boolean)
  (incupdate :boolean)
  (rgbreserved :uint8 :count 32))

(defcstruct logpalette
  (version :uint16)
  (num-entries :uint16)
  (palette-entries (:struct paletteentry) :count 1))

(defcstruct pixelformatdescriptor
  (size :uint16)
  (version :uint16)
  (flags :uint32)
  (pixel-type :uint8)
  (color-bits :uint8)
  (red-bits :uint8)
  (red-shift :uint8)
  (green-bits :uint8)
  (green-shift :uint8)
  (blue-bits :uint8)
  (blue-shift :uint8)
  (alpha-bits :uint8)
  (alpha-shift :uint8)
  (accum-bits :uint8)
  (accum-red-bits :uint8)
  (accum-green-bits :uint8)
  (accum-blue-bits :uint8)
  (accum-alpha-bits :uint8)
  (depth-bits :uint8)
  (stencil-bits :uint8)
  (aux-buffers :uint8)
  (layer-type :uint8)
  (reserved :uint8)
  (layer-mask :uint32)
  (visible-mask :uint32)
  (damage-mask :uint32))

(defcstruct point
  (x :int32)
  (y :int32))

(defcstruct trackmouseevent
  (cbsize :uint32)
  (flags :uint32)
  (hwnd :pointer)
  (hover-time :uint32))

(defcstruct wndclass
  (style :uint32)
  (wndproc :pointer)
  (clsextra :int32)
  (wndextra :int32)
  (instance :pointer)
  (icon :pointer)
  (cursor :pointer)
  (background :pointer)
  (menu-name (:string :encoding #.+win32-string-encoding+))
  (wndclass-name (:string :encoding #.+win32-string-encoding+)))

(defcstruct wndclassex
  (cbsize :uint32)
  (style :uint32)
  (wndproc :pointer)
  (clsextra :int32)
  (wndextra :int32)
  (instance :pointer)
  (icon :pointer)
  (cursor :pointer)
  (background :pointer)
  (menu-name (:string :encoding #.+win32-string-encoding+))
  (wndclass-name (:string :encoding #.+win32-string-encoding+))
  (iconsm :pointer))

(defcstruct msg
  (hwnd :pointer)
  (message :uint32)
  (wparam :pointer)
  (lparam :pointer)
  (time :uint32)
  (point (:struct point)))

(defcstruct createstruct
  (create-params :pointer)
  (instance :pointer)
  (menu :pointer)
  (parent :pointer)
  (cy :int)
  (cx :int)
  (y :int)
  (x :int)
  (style :long)
  (name (:string :encoding #.+win32-string-encoding+))
  (class (:string :encoding #.+win32-string-encoding+))
  (exstyle :uint32))

(defcstruct overlapped
  (internal :pointer)
  (internal-high :pointer)
  (offset :uint32)
  (offset-high :uint32)
  (event :pointer))

(defcstruct security-attributes
  (length :uint32)
  (security-descriptor :pointer)
  (inherit :boolean))

(defcstruct animationinfo
  (size uint)
  (minanimate :int))

(defcstruct audiodescription
  (size uint)
  (enabled bool)
  (locale lcid))

(defcstruct minimizedmetrics
  (size uint)
  (width :int)
  (horzgap :int)
  (vertgap :int)
  (arrange :int))

(defcstruct logfont
  (height long)
  (width long)
  (escapement long)
  (orientation long)
  (weight long)
  (italic byte)
  (underline byte)
  (strikeout byte)
  (charset byte)
  (outprecision byte)
  (clipprecision byte)
  (quality byte)
  (pitchandfamily byte)
  (facename tchar :count #.+lf-facesize+))

(defcstruct nonclientmetrics
  (size uint)
  (borderwidth :int)
  (scrollwidth :int)
  (scrollheight :int)
  (captionwidth :int)
  (captionheight :int)
  (captionfont (:struct logfont))
  (smcaptionwidth :int)
  (smcaptionheight :int)
  (smcaptionfont (:struct logfont))
  (menuwidth :int)
  (menuheight :int)
  (menufont (:struct logfont))
  (statusfont (:struct logfont))
  (messagefont (:struct logfont))
  ;;#IF WINVER >= 0x0600
  (paddedborderwidth :int)
  ;;#ENDIF
  )

(defcstruct guid
  (data1 dword)
  (data2 word)
  (data3 word)
  (data4 byte :count 8))

(defcstruct sp-devinfo-data
  (size dword)
  (class-guid (:struct guid))
  (dev-inst dword)
  (reserved ulong-ptr))

(defcstruct sp-device-interface-data
  (size dword)
  (interface-class-guid (:struct guid))
  (flags dword)
  (reserved :pointer))

(defcstruct sp-device-interface-detail-data
  (size dword)
  (device-path tchar :count #.+anysize-array+))

(defcfun ("Beep" beep) :boolean
  (frequency :uint32)
  (duration :uint32))

(defcfun ("BeginPaint" begin-paint) :pointer
  (hwnd :pointer)
  (paint :pointer))

(defcfun ("BroadcastSystemMessageW" broadcast-system-message) :long
  (flags dword)
  (recipients (:pointer dword))
  (message uint)
  (wparam wparam)
  (lparam lparam))

(defcfun ("CallNextHookEx" call-next-hook) :uint32
  (current-hook :pointer)
  (code :int32)
  (wparam :uint32)
  (lparam :uint32))

(defcfun ("CallWindowProcW" call-window-proc) lresult
  (prev-wndproc :pointer)
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (lparam lparam))

(defcfun ("CancelIo" cancel-io) :int
  (handle :pointer))

(defcfun ("ChoosePixelFormat" choose-pixel-format) :int
  (dc :pointer)
  (pixel-format :pointer))

(defcfun ("ClientToScreen" client-to-screen) :boolean
  (hwnd :pointer)
  (point :pointer))

(defcfun ("ClipCursor" clip-cursor) :boolean
  (rect :pointer))

(defcfun ("CloseHandle" close-handle) :boolean
  (handle :pointer))

(defcfun ("CloseWindow" close-window) :boolean
  (hwnd :pointer))

(defcfun ("CopyFileW" copy-file) :boolean
  (existing-name (:string :encoding #.+win32-string-encoding+))
  (new-name (:string :encoding #.+win32-string-encoding+))
  (fail-if-exists :boolean))

(defcfun ("CopyFileExW" copy-file-ex) :boolean
  (existing-name (:string :encoding #.+win32-string-encoding+))
  (new-name (:string :encoding #.+win32-string-encoding+))
  (progress-routine :pointer)
  (data :pointer)
  (cancel :pointer)
  (flags :uint32))

(defcfun ("CreateDesktopW" create-desktop) :pointer
  (desktop (:string :encoding #.+win32-string-encoding+))
  (device :pointer)
  (devmode :pointer)
  (flags :uint32)
  (desired-access :uint32)
  (security-attributes :pointer))

(defcfun ("CreateEventW" create-event) :pointer
  (security-attributes :pointer)
  (manual-reset :boolean)
  (initial-state :boolean)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("CreateFileW" create-file) :pointer
  (file-name pctstr)
  (desired-access dword)
  (share-mode dword)
  (security-attributes (:pointer (:struct security-attributes)))
  (creation-disposition dword)
  (flags-and-attributes dword)
  (template-file handle))

(defcfun ("CreateMutexW" create-mutex) :pointer
  (security-attributes :pointer)
  (initial-owner :boolean)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("CreatePalette" create-palette) :pointer
  (log-palette :pointer))

(defcfun ("CreateSemaphoreW" create-semaphore) :pointer
  (security-attributes :pointer)
  (initial-count :int32)
  (maximum-count :int32)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("CreateWindowExW" create-window-ex) :pointer
  (ex-style :uint32)
  (wndclass-name (:string :encoding #.+win32-string-encoding+))
  (window-name (:string :encoding #.+win32-string-encoding+))
  (style :uint32)
  (x :int32)
  (y :int32)
  (width :int32)
  (height :int32)
  (parent :pointer)
  (menu :pointer)
  (module-instance :pointer)
  (param :pointer))

(defcfun ("DefWindowProcW" def-window-proc) lresult
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (lparam lparam))

(defcfun ("DeleteObject" delete-object) :int
  (object :pointer))

(defcfun ("DescribePixelFormat" describe-pixel-format) :int
  (dc :pointer)
  (format-index :int)
  (bytes :uint32)
  (pixel-format :pointer))

(defcfun ("DestroyCursor" destroy-cursor) :boolean
  (cursor :pointer))

(defcfun ("DestroyWindow" destroy-window) :boolean
  (hwnd :pointer))

(defcfun ("DispatchMessageW" dispatch-message) :int32
  (msg :pointer))

(defcfun ("EnableWindow" enable-window) :boolean
  (hwnd :pointer)
  (enable :boolean))

(defcfun ("EndPaint" end-paint) :boolean
  (hwnd :pointer)
  (paint :pointer))

(defcfun ("EnumWindows" enum-windows) :boolean
  (callback :pointer)
  (lparam :pointer))

(defcfun ("FindWindowW" find-window) hwnd
  (wndclass-name lpctstr)
  (window-name lpctstr))

(defcfun ("FindWindowExW" find-window-ex) hwnd
  (hwnd-parent hwnd)
  (hwnd-child-after hwnd)
  (class lpctstr)
  (window lpctstr))

(defcfun ("GetACP" get-acp) uint)

(defcfun ("GetClassLongW" get-class-long) :long
  (hwnd :pointer)
  (index :int))

#+x86
(defcfun ("GetClassLongW" get-class-long-ptr) :pointer
  (hwnd :pointer)
  (index :int))

#+x86-64
(defcfun ("GetClassLongPtrW" get-class-long-ptr) :pointer
  (hwnd :pointer)
  (index :int))

(defcfun ("GetClassWord" get-class-word) :uint16
  (hwnd :pointer)
  (index :int))

(defcfun ("GetClientRect" get-client-rect) :boolean
  (hwnd :pointer)
  (rect :pointer))

(defcfun ("GetCommandLineW" get-command-line) lptstr)

(defcfun ("GetCurrentProcess" get-current-process) :pointer)

(defcfun ("GetCurrentProcessId" get-current-process-id) :uint32)

(defcfun ("GetCurrentProcessorNumber" get-current-processor-number)
    :uint32)

(defcfun ("GetCurrentThreadId" get-current-thread-id) :uint32)

(defcfun ("GetDC" get-dc) :pointer
  (hwnd :pointer))

(defcfun ("GetDesktopWindow" get-desktop-window) :pointer)

(defcfun ("GetInputState" get-input-state) bool)

(defcfun ("GetLastError" get-last-error) :uint32)

(defcfun ("GetMessageW" get-message) :boolean
  (msg :pointer)
  (hwnd :pointer)
  (msg-min :uint32)
  (msg-max :uint32))

(defcfun ("GetMessageExtraInfo" get-message-extra-info) lparam)

(defcfun ("GetMessagePos" get-message-pos) dword)

(defcfun ("GetMessageTime" get-message-time) long)

(defcfun ("GetModuleHandleW" get-module-handle) :pointer
  (module (:string :encoding #.+win32-string-encoding+)))

(defcfun ("GetOverlappedResult" get-overlapped-result) :int
  (handle :pointer)
  (overlapped (:pointer (:struct overlapped)))
  (bytes-transfered (:pointer :uint32))
  (wait :int))

(defcfun ("GetParent" get-parent) :pointer
  (hwnd :pointer))

(defcfun ("GetPixelFormat" get-pixel-format) :int
  (dc :pointer))

(defcfun ("GetShellWindow" get-shell-window) :pointer)

(defcfun ("GetStockObject" get-stock-object) :pointer
  (object :uint32))

(defcfun ("GetQueueStatus" get-queue-status) dword
  (flags uint))

(defcfun ("GetSysColor" get-sys-color) :uint32
  (index :int))

(defcfun ("GetSysColorBrush" get-sys-color-brush) hbrush
  (index :int))

(defcfun ("GetSystemMetrics" get-system-metrics) :int
  (index :int))

(defcfun ("GetTopWindow" get-top-window) :pointer
  (hwnd :pointer))

(defcfun ("GetWindowLongW" get-window-long) :int32
  (hwnd :pointer)
  (index :int32))

(defcfun ("GetWindowRect" get-window-rect) :boolean
  (hwnd :pointer)
  (rect :pointer))

(defcfun ("GetWindowTextW" get-window-text) :int
  (hwnd :pointer)
  (string (:string :encoding #.+win32-string-encoding+))
  (size :int))

(defcfun ("GetWindowThreadProcessId" get-window-thread-process-id) :uint32
  (hwnd :pointer)
  (process-id :pointer))

(defcfun ("InSendMessage" in-send-message) bool)

(defcfun ("InSendMessageEx" in-send-message-ex) dword
  (reserved :pointer))

(defcfun ("InvalidateRect" invalidate-rect) :boolean
  (hwnd :pointer)
  (rect :pointer)
  (erase :boolean))

(defcfun ("IsGUIThread" is-gui-thread) :boolean
  (convert :boolean))

(defcfun ("IsWindow" is-window) :boolean
  (hwnd :pointer))

(defcfun ("LoadCursorW" load-cursor) :pointer
  (instance :pointer)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("LoadCursorFromFileW" load-cursor-from-file) :pointer
  (file-name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("LoadIconW" load-icon) :pointer
  (instance :pointer)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("MoveFileW" move-file) :boolean
  (old-name (:string :encoding #.+win32-string-encoding+))
  (new-name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("MoveFileExW" move-file-ex) :boolean
  (old-name (:string :encoding #.+win32-string-encoding+))
  (new-name (:string :encoding #.+win32-string-encoding+))
  (flags :uint32))

(defcfun ("OpenEventW" open-event) :pointer
  (access :uint32)
  (inherit-handle :boolean)
  (name (:string :encoding #.+win32-string-encoding+)))

(defcfun ("OpenInputDesktop" open-input-desktop) :pointer
  (flags :uint32)
  (inherit :boolean)
  (desired-access :uint32))

(defcfun ("PeekMessageW" peek-message) :int
  (msg :pointer)
  (hwnd :pointer)
  (msg-min :uint32)
  (msg-max :uint32)
  (remove :uint32))

(defcfun ("PostMessageW" post-message) :boolean
  (hwnd :pointer)
  (msg :uint32)
  (wparam :pointer)
  (lparam :pointer))

(defcfun ("PostQuitMessage" post-quit-message) :void
  (exit-code :int32))

(defcfun ("PostThreadMessageW" post-thread-message) :boolean
  (thread-id :uint32)
  (msg :uint32)
  (wparam :pointer)
  (lparam :pointer))

(defcfun ("ReadFile" read-file) :int
  (handle :pointer)
  (buffer :pointer)
  (bytes-to-read :uint32)
  (bytes-read (:pointer :uint32))
  (overlapped (:pointer (:struct overlapped))))

(defcfun ("RealizePalette" realize-palette) :uint32
  (dc :pointer))

(defcfun ("RegCloseKey" reg-close-key) :long
  (hkey :pointer))

(defcfun ("RegCreateKeyW" reg-create-key) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (phkey-result (:pointer :pointer)))

(defcfun ("RegCreateKeyExW" reg-create-key-ex) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (reserved :uint32)
  (class (:string :encoding #.+win32-string-encoding+))
  (options :uint32)
  (sam-desired :uint32)
  (security-attributes (:pointer (:struct security-attributes)))
  (phkey-result (:pointer :pointer))
  (disposition (:pointer :uint32)))

(defcfun ("RegDeleteKeyW" reg-delete-key) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+)))

(defcfun ("RegDeleteKeyExW" reg-delete-key-ex) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (sam-desired :uint32)
  (reserved :uint32))

(defcfun ("RegDeleteTreeW" reg-delete-tree) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+)))

(defcfun ("RegGetValueW" reg-get-value) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (value-name (:string :encoding #.+win32-string-encoding+))
  (flags :uint32)
  (type (:pointer :uint32))
  (data :pointer)
  (data-size (:pointer :uint32)))

(defcfun ("RegOpenKeyW" reg-open-key) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (phkey-result (:pointer :pointer)))

(defcfun ("RegOpenKeyExW" reg-open-key-ex) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (options :uint32)
  (sam-desired :uint32)
  (phkey-result (:pointer :pointer)))

(defcfun ("RegQueryValueW" reg-query-value) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (value (:pointer (:string :encoding #.+win32-string-encoding+)))
  (value-size (:pointer :long)))

(defcfun ("RegQueryValueExW" reg-query-value-ex) :long
  (hkey :pointer)
  (value-name (:string :encoding #.+win32-string-encoding+))
  (reserved (:pointer :uint32))
  (type (:pointer :uint32))
  (data (:pointer :uint8))
  (data-size (:pointer :uint32)))

(defcfun ("RegSetValueW" reg-set-value) :long
  (hkey :pointer)
  (sub-key (:string :encoding #.+win32-string-encoding+))
  (type :uint32)
  (data (:string :encoding #.+win32-string-encoding+))
  (data-size :uint32))

(defcfun ("RegSetValueExW" reg-set-value-ex) :long
  (hkey :pointer)
  (value-name (:string :encoding #.+win32-string-encoding+))
  (reserved :uint32)
  (type :uint32)
  (data (:pointer :uint8))
  (data-size :uint32))

(defcfun ("RegisterClassW" register-class) :uint16
  (wndclass :pointer))

(defcfun ("RegisterClassExW" register-class-ex) :uint16
  (wndclassex :pointer))

(defcfun ("RegisterWindowMessageW" register-window-message) uint
  (string lpctstr))

(defcfun ("ReleaseDC" release-dc) :boolean
  (hwnd :pointer)
  (dc :pointer))

(defcfun ("ReplyMessage" reply-message) bool
  (result lresult))

(defcfun ("ResetEvent" reset-event) :boolean
  (event :pointer))

(defcfun ("ResizePalette" resize-palette) :boolean
  (palette :pointer)
  (entries :int))

(defun rgb (r g b)
  (logior
   (ash (logand b #xFF) 16)
   (ash (logand g #xFF) 8)
   (ash (logand r #xFF) 0)))

(defcfun ("SelectPalette" select-palette) :pointer
  (dc :pointer)
  (palette :pointer)
  (force-background :boolean))

(defcfun ("SendInput" send-input) :uint32
  (num-inputs :uint32)
  (inputs :pointer)
  (cbsize :int))

(defcfun ("SendMessageW" send-message) lresult
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (lparam lparam))

(defcfun ("SendMessageCallbackW" send-message-callback) bool
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (lparam lparam)
  (callback :pointer)
  (data ulong-ptr))

(defcfun ("SendMessageTimeoutW" send-message-timeout) lresult
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (flags uint)
  (timeout uint)
  (result (:pointer dword-ptr)))

(defcfun ("SendNotifyMessageW" send-notify-message) bool
  (hwnd hwnd)
  (msg uint)
  (wparam wparam)
  (lparam lparam))

(defcfun ("SetClassLongW" set-class-long) :uint32
  (hwnd :pointer)
  (index :int)
  (value :long))

#+x86
(defcfun ("SetClassLongW" set-class-long-ptr) :pointer
  (hwnd :pointer)
  (index :int)
  (value :pointer))

#+x86-64
(defcfun ("SetClassLongPtrW" set-class-long-ptr) :pointer
  (hwnd :pointer)
  (index :int)
  (value :pointer))

(defcfun ("SetClassWord" set-class-word) :pointer
  (hwnd :pointer)
  (index :int)
  (value :uint16))

(defcfun ("SetCursor" set-cursor) :pointer
  (cursor :pointer))

(defcfun ("SetCursorPos" set-cursor-pos) :boolean
  (x :int)
  (y :int))

(defcfun ("SetEvent" set-event) :boolean
  (event :pointer))

(defcfun ("SetForegroundWindow" set-foreground-window) :boolean
  (hwnd :pointer))

(defcfun ("SetLayeredWindowAttributes" set-layered-window-attributes) :boolean
  (hwnd :pointer)
  (color :uint32)
  (alpha :uint8)
  (flags :uint32))

(defcfun ("SetMessageExtraInfo" set-message-extra-info) lparam
  (lparam lparam))

(defcfun ("SetParent" set-parent) :boolean
  (hwnd :pointer)
  (new-parent :pointer))

(defcfun ("SetPixelFormat" set-pixel-format) :boolean
  (dc :pointer)
  (format-index :int)
  (pixel-format :pointer))

(defcfun ("SetSysColors" set-sys-colors) bool
  (numelements :int)
  (elements (:pointer :int))
  (rgbas (:pointer colorref)))

(defcfun ("SetWinEventHook" set-win-event-hook) :pointer
  (event-min :uint32)
  (event-max :uint32)
  (proc-module :pointer)
  (id-process :uint32)
  (id-thread :uint32)
  (flags :uint32))

(defcfun ("SetWindowLongW" set-window-long) :int32
  (hwnd :pointer)
  (index :int32)
  (newval :int32))

(defcfun ("SetWindowPos" set-window-pos) :boolean
  (hwnd :pointer)
  (insert-after :pointer)
  (x :int32)
  (y :int32)
  (cx :int32)
  (cy :int32)
  (flags :uint32))

(defcfun ("SetWindowTextW" set-window-text) :boolean
  (hwnd :pointer)
  (text (:string :encoding #.+win32-string-encoding+)))

(defcfun ("SetWindowsHookExW" set-windows-hook-ex) :pointer
  (id-hook :int32)
  (hook :pointer)
  (module :pointer)
  (thread-id :uint32))

(defcfun ("SetupDiDestroyDeviceInfoList" setup-di-destroy-device-info-list) bool
  (device-info hdevinfo))

(defcfun ("SetupDiEnumDeviceInterfaces" setup-di-enum-device-interface) bool
  (device hdevinfo)
  (device-info-data (:pointer (:struct sp-devinfo-data)))
  (guid (:pointer (:struct guid)))
  (member-index dword)
  (device-interface-data (:pointer (:struct sp-device-interface-data))))

(defcfun ("SetupDiGetClassDevsW" setup-di-get-class-devs) hdevinfo
  (guid (:pointer (:struct guid)))
  (enum pctstr)
  (hwnd-parent hwnd)
  (flags dword))

(defcfun ("SetupDiGetDeviceInterfaceDetailW" setup-di-get-device-interface-detail) bool
  (device hdevinfo)
  (device-interface-data (:pointer (:struct sp-device-interface-data)))
  (device-interface-detail-data (:pointer (:struct sp-device-interface-detail-data)))
  (device-interface-detail-data-size dword)
  (required-size (:pointer dword))
  (device-info-data (:pointer (:struct sp-devinfo-data))))

(defcfun ("ShowCursor" show-cursor) :int
  (show :boolean))

(defcfun ("ShowWindow" show-window) :int
  (hwnd :pointer)
  (cmd :int32))

(defcfun ("SwapBuffers" swap-buffers) :boolean
  (dc :pointer))

(defcfun ("SwitchDesktop" switch-desktop) :boolean
  (desktop :pointer))

(defcfun ("SystemParametersInfoW" system-parameters-info) bool
  (action uint)
  (uiparam uint)
  (pvparam :pointer)
  (win-ini uint))

(defcfun ("TrackMouseEvent" track-mouse-event) :boolean
  (trackmousevent :pointer))

(defcfun ("TranslateMessage" translate-message) :int
  (msg :pointer))

(defcfun ("UnregisterClassW" unregister-class) :boolean
  (wndclass-name (:string :encoding #.+win32-string-encoding+))
  (instance :pointer))

(defcfun ("UpdateWindow" update-window) :int
  (hwnd :pointer))

(defcfun ("ValidateRect" validate-rect) :boolean
  (hwnd :pointer)
  (rect :pointer))

(defcfun ("WaitForSingleObject" wait-for-single-object) :uint32
  (handle :pointer)
  (milliseconds :uint32))

(defcfun ("wglCreateContext" wgl-create-context) :pointer
  (dc :pointer))

(defcfun ("wglDeleteContext" wgl-delete-context) :boolean
  (context :pointer))

(defcfun ("wglMakeCurrent" wgl-make-current) :boolean
  (dc :pointer)
  (gl-rc :pointer))

;;;TODO This function actually takes in a struct point, but we need cffi-libffi for that
(defcfun ("WindowFromPoint" window-from-point) :pointer
  (x :int32)
  (y :int32))

(defcfun ("WriteFile" write-file) bool
  (file handle)
  (buffer :pointer)
  (number-of-bytes-to-write dword)
  (number-of-bytes-written (:pointer dword))
  (overlapped (:pointer (:struct overlapped))))
